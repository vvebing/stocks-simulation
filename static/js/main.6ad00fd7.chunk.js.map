{"version":3,"sources":["reportWebVitals.js","index.js","App.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","id","fallback","size","delay","App","document","getElementById","Login","lazy","Error","Finish","Notice","Practice","Dashboard","Preparation","PracticeTest","Questionnaire","SELECTS","STOCKS","CLEAR_PASSWORD","props","login","uuid","groupID","localForage","setItem","setState","closeModal","noticed","showNotice","clearUserInfo","confirm","okText","cancelText","title","content","Password","onChange","event","clearPassword","target","value","onOk","a","warning","clear","trades","moods","status","practice","totalProfit","clearDashboard","state","nextTrades","slice","pop","calcProfit","openNotice","goBack","removeItem","error","window","location","reload","handleStart","select","stocks","filter","stock","findIndex","trade","Math","floor","random","length","buy","sell","handleNext","handleTrade","option","amount","latestData","updateKeys","newTrades","splice","onQuestionSubmit","saveTextAsFile","calcFinalData","handlePracticeNext","loading","getItem","nextState","this","test","getExperimentStatus","active","subTitle","childComponent","tempStatus","backIcon","extra","type","onClick","danger","className","column","Item","label","visible","onCancel","PureComponent","calc","principal","next","total","Array","isArray","cost","tCost","profit","position","i","data","balance","averageCost","marketValue","totalAsset","maxBuy","toFixed","rawData","trials","trialIndex","totalSell","sellAfterRise","sellAfterFall","totalGain","totalLose","prevPosition","prevAverageCost","totalRealizedGain","totalRealizedLose","sellPriceSubAverageCost","j","push","paperGain","paperLose","realizedGain","realizedLose","paperProfit","realizedProfit","trial","diff","undefined","gainRatio","lossRatio","reduce","b","finalData","fileText","JSON","stringify","fileTextAsBlob","Blob","downloadLink","createElement","download","innerHTML","webkitURL","href","createObjectURL","URL","onclick","body","removeChild","style","display","appendChild","click","useInterval","callback","savedCallback","useRef","useEffect","current","setInterval","clearInterval"],"mappings":"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","file":"static/js/main.6ad00fd7.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Spin } from 'antd';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div id=\"app\">\n      <Suspense fallback={<Spin size=\"large\" delay={100} />}>\n        <App />\n      </Suspense>\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { lazy, PureComponent, useEffect, useRef } from 'react';\nimport localForage from 'localforage';\nimport {\n  Button,\n  Descriptions,\n  Input,\n  message,\n  Modal,\n  PageHeader,\n  Skeleton,\n} from 'antd';\n\nimport data from './data.json';\n\nconst Login = lazy(() => import('./Login'));\nconst Error = lazy(() => import('./Error'));\nconst Finish = lazy(() => import('./Finish'));\nconst Notice = lazy(() => import('./Notice'));\nconst Practice = lazy(() => import('./Practice'));\nconst Dashboard = lazy(() => import('./Dashboard'));\nconst Preparation = lazy(() => import('./Preparation'));\nconst PracticeTest = lazy(() => import('./PracticeTest'));\nconst Questionnaire = lazy(() => import('./Questionnaire'));\n\nexport const SELECTS = ['甲', '乙', '丙', '丁', '戊', '己', '庚', '辛'];\nconst STOCKS = ['A', 'B', 'C', 'D', 'E'];\nconst CLEAR_PASSWORD = '981107';\n\nexport default class App extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      uuid: '',\n      groupID: '',\n      noticed: false,\n      showNotice: false,\n      practice: {\n        // buy: [],\n        // sell: [],\n        // test: [],\n      },\n      trades: [],\n      /**\n       * [{\n       *  select: number,\n       *  stock: A | B | C | D | E,\n       *  buy: [],  // length = 21\n       *  sell: [], // length = 21\n       * }]\n       */\n      moods: [],\n      status: 0,\n      error: false,\n      totalProfit: 0,\n    };\n    this.clearPassword = '';\n  }\n\n  async componentDidMount() {\n    try {\n      const { uuid = '', groupID = '' } = await localForage.getItem('userInfo') ?? {};\n      const noticed = await localForage.getItem('noticed') ?? false;\n      const nextState = {\n        uuid,\n        groupID,\n        noticed,\n        showNotice: !noticed,\n        loading: false,\n      };\n      if (!uuid || !groupID) {\n        return this.setState(nextState);\n      }\n      const practice = await localForage.getItem('practice') ?? {};\n      nextState.practice = practice;\n      if (!practice.buy || !practice.sell || !practice.test) {\n        return this.setState(nextState);\n      }\n      const trades = await localForage.getItem('trades') ?? [];\n      const moods = await localForage.getItem('moods') ?? [];\n      const totalProfit = calcProfit(trades);\n      const status = getExperimentStatus(trades, moods);\n      this.setState({\n        ...nextState,\n        moods,\n        trades,\n        status,\n        totalProfit,\n      });\n    } catch (err) {\n      this.setState({\n        error: true,\n        loading: false,\n      });\n    }\n  }\n\n  login = ({ uuid, groupID }) => {\n    localForage.setItem('userInfo', {\n      uuid,\n      groupID,\n    }, () => {\n      this.setState({\n        uuid,\n        groupID,\n      });\n    });\n  }\n\n  closeModal = () => {\n    localForage.setItem('noticed', true, () => {\n      this.setState({\n        noticed: true,\n        showNotice: false,\n      });\n    });\n  }\n\n  clearUserInfo = () => {\n    Modal.confirm({\n      okText: '确定',\n      cancelText: '取消',\n      title: '是否清除用户数据？',\n      content: [\n        <p key=\"text\">清除用户数据后也将会清除实验数据！请谨慎操作！</p>,\n        <p key=\"password\">请主试输入密码：<Input.Password onChange={(event) => {this.clearPassword = event.target.value}} /></p>,\n      ],\n      onOk: async () => {\n        if (this.clearPassword !== CLEAR_PASSWORD) {\n          message.warning('主试权限才能清除用户数据！');\n          return;\n        }\n        this.clearPassword = '';\n\n        await localForage.clear();\n        this.setState({\n          uuid: '',\n          groupID: '',\n          noticed: false,\n          showNotice: true,\n          trades: [],\n          moods: [],\n          status: 0,\n          practice: {},\n          totalProfit: 0,\n        });\n      },\n    });\n  }\n\n  clearDashboard = () => {\n    Modal.confirm({\n      okText: '确定',\n      cancelText: '取消',\n      title: '是否清除当前轮实验数据',\n      content: [\n        <p key=\"text\">清除实验数据后，您需要重新操作！请谨慎操作！</p>,\n        <p key=\"password\">请主试输入密码：<Input.Password onChange={(event) => {this.clearPassword = event.target.value}} /></p>,\n      ],\n      onOk: async () => {\n        if (this.clearPassword !== CLEAR_PASSWORD) {\n          message.warning('主试权限才能清除实验数据！');\n          return;\n        }\n        this.clearPassword = '';\n\n        const { trades } = this.state;\n        const nextTrades = trades.slice();\n        nextTrades.pop();\n        this.setState({\n          status: 0,\n          trades: nextTrades,\n          totalProfit: calcProfit(nextTrades),\n        }, () => {\n          localForage.setItem('trades', nextTrades);\n        });\n      },\n    });\n  }\n\n  openNotice = () => {\n    this.setState({ showNotice: true });\n  }\n\n  goBack = async () => {\n    const { status } = this.state;\n    if (status === -1) {\n      await localForage.removeItem('trades');\n      this.setState({\n        error: false,\n        trades: [],\n        moods: [],\n        status: 0,\n      });\n    } else {\n      window.location.reload();\n    }\n  }\n\n  handleStart = (select) => {\n    this.setState((state) => {\n      const stocks = STOCKS.filter((stock) => state.trades.findIndex((trade) => trade.stock === stock) === -1);\n      return {\n        trades: [...state.trades, {\n          select,\n          stock: stocks[Math.floor(Math.random() * stocks.length)],\n          buy: [300],\n          sell: [0],\n        }],\n        status: 1,\n      };\n    }, () => {\n      const { trades } = this.state;\n      localForage.setItem('trades', trades);\n    });\n  }\n\n  handleNext = () => {\n    const { trades } = this.state;\n    const totalProfit = calcProfit(trades);\n    this.setState({\n      status: trades.length < 5 ? 0 : 2,\n      totalProfit,\n    });\n  }\n\n  handleTrade = (option, amount) => {\n    const { trades, moods } = this.state;\n    const latestData = trades[trades.length - 1];\n    if (latestData) {\n      const { buy, sell } = latestData;\n      if (buy.length !== sell.length) {\n        return this.setState({ status: -1 });\n      }\n      if (buy.length >= 21) {\n        if (trades.length < 5) {\n          this.setState({ status: 0 });\n        } else if (moods.length < 4) {\n          this.setState({ status: 2 });\n        } else {\n          this.setState({ status: 3 });\n        }\n      } else {\n        const updateKeys = {};\n        if (option === 'buy') {\n          updateKeys.buy = [...buy, amount];\n          updateKeys.sell = [...sell, 0];\n        } else if (option === 'sell') {\n          updateKeys.buy = [...buy, 0];\n          updateKeys.sell = [...sell, amount];\n        } else {\n          updateKeys.buy = [...buy, 0];\n          updateKeys.sell = [...sell, 0];\n        }\n        const newTrades = trades.slice();\n        newTrades.splice(-1, 1, {\n          ...latestData,\n          ...updateKeys,\n        });\n        this.setState({\n          trades: newTrades,\n        }, () => {\n          localForage.setItem('trades', newTrades);\n        });\n      }\n    } else {\n      this.setState({ status: 0 });\n    }\n  }\n\n  onQuestionSubmit = (moods) => {\n    this.setState({\n      moods,\n      status: 3,\n    }, () => {\n      localForage.setItem('moods', moods);\n    });\n  }\n\n  saveTextAsFile = () => {\n    Modal.confirm({\n      okText: '确定',\n      cancelText: '取消',\n      title: '导出实验数据',\n      content: [\n        <p key=\"text\">为避免实验数据丢失，请在导出实验数据后发送到主试邮箱！</p>,\n        <p key=\"password\">请主试输入密码：<Input.Password onChange={(event) => {this.clearPassword = event.target.value}} /></p>,\n      ],\n      onOk: async () => {\n        if (this.clearPassword !== CLEAR_PASSWORD) {\n          message.warning('主试权限才能导出实验数据！');\n          return;\n        }\n        this.clearPassword = '';\n\n        const { uuid, groupID, trades, moods } = this.state;\n        saveTextAsFile(calcFinalData(trades, moods, uuid, groupID), uuid, groupID);\n      },\n    });\n  }\n\n  handlePracticeNext = (practice) => {\n    this.setState((state) => ({\n      practice: {\n        ...state.practice,\n        ...practice,\n      },\n    }), () => {\n      const { practice } = this.state;\n      localForage.setItem('practice', practice);\n    });\n  }\n\n  render() {\n    const {\n      loading,\n      error,\n      uuid,\n      groupID,\n      noticed,\n      showNotice,\n      trades,\n      status,\n      practice,\n      totalProfit,\n     } = this.state;\n\n    if (loading) {\n      return <div id=\"skeleton\"><Skeleton active /></div>;\n    }\n\n    if (error || status === -1) {\n      return <Error status={status} goBack={this.goBack} />;\n    }\n\n    if (!uuid || !groupID) {\n      return <Login login={this.login} />;\n    }\n\n    let subTitle = '';\n    let childComponent = null;\n    const tempStatus = status;\n\n    if (!practice.buy || !practice.sell) {\n      subTitle = \"练习操作\";\n      childComponent = <Practice handlePracticeNext={this.handlePracticeNext} />;\n    } else if (!practice.test) {\n      subTitle = \"练习测验\";\n      childComponent = <PracticeTest handlePracticeNext={this.handlePracticeNext} />;\n    } else {\n      switch(tempStatus) {\n        case 0: {\n          subTitle = `即将开始第${trades.length + 1}轮实验`;\n          childComponent = <Preparation trades={trades} groupID={groupID} handleStart={this.handleStart} />;\n          break;\n        }\n        case 1: {\n          subTitle = `正在进行第${trades.length}轮实验`;\n          childComponent = <Dashboard trades={trades} groupID={groupID} handleTrade={this.handleTrade} handleNext={this.handleNext} />;\n          break;\n        }\n        case 2: {\n          subTitle = `已结束第${trades.length}轮实验`;\n          childComponent = <Questionnaire groupID={groupID} onQuestionSubmit={this.onQuestionSubmit} />;\n          break;\n        }\n        case 3: {\n          subTitle = `所有实验已结束`;\n          childComponent = <Finish totalProfit={totalProfit} saveTextAsFile={this.saveTextAsFile} />;\n          break;\n        }\n        default:\n          break;\n      }\n    }\n\n    return (\n      <div id=\"main\">\n        <PageHeader\n          backIcon={false}\n          title=\"股票模拟交易实验\"\n          subTitle={subTitle}\n          extra={[\n            <Button key=\"notice\" type=\"link\" onClick={this.openNotice}>实验须知</Button>,\n            <Button key=\"userInfo\" danger type=\"primary\" onClick={this.clearUserInfo}>清除用户数据</Button>,\n            <Button key=\"trades\" danger onClick={this.clearDashboard}>清除当前轮实验数据</Button>,\n          ]}\n        >\n          <div className=\"content\">\n            <Descriptions size=\"small\" column={2}>\n              <Descriptions.Item label=\"被试编号\">\n                {uuid}\n              </Descriptions.Item>\n              <br />\n              <Descriptions.Item label=\"分组编号\">\n                {groupID}\n              </Descriptions.Item>\n            </Descriptions>\n          </div>\n        </PageHeader>\n        {childComponent}\n        <Notice\n          noticed={noticed}\n          visible={showNotice}\n          onCancel={this.closeModal}\n        />\n      </div>\n    );\n  }\n}\n\n/**\n * 传入实验数据返回当前实验状态\n * @param {Array} trades 实验数据\n * @returns {(-1|0|1|2|3)} 实验状态\n */\nfunction getExperimentStatus(trades, moods) {\n  let status;\n  const latestData = trades[trades.length - 1];\n  const {\n    buy = [],\n    sell = [],\n  } = latestData || {};\n  if (!latestData) {\n    status = 0;\n  } else if (\n    buy.length >= 21 ||\n    sell.length >= 21\n  ) {\n    if (trades.length < 5) {\n      status = 0;\n    } else if (moods.length < 4) {\n      status = 2;\n    } else {\n      status = 3;\n    }\n  } else if (\n    buy.length < 21 &&\n    buy.length === sell.length\n  ) {\n    status = 1;\n  } else {\n    status = -1;\n  }\n  return status;\n}\n\nexport function calc(trade, principal = 5000, next = false, total = false) {\n  const { stock, buy, sell } = trade;\n  if (\n    !stock\n    || !Array.isArray(buy)\n    || !Array.isArray(sell)\n    || (total && (buy.length < 21 || sell.length < 21))\n  ) {\n    return {};\n  }\n  let cost = 0;\n  let tCost = 0;\n  let amount = 0;\n  let profit = 0;\n  let position = 0;\n  for (let i = 0; i < buy.length; i += 1) {\n    cost += buy[i] * data[stock][i + 3];\n    if (sell[i] === position && position !== 0) {\n      tCost = 0;\n      amount = 0;\n    } else {\n      tCost += buy[i] * data[stock][i + 3];\n      amount += buy[i];\n    }\n    position += buy[i] - sell[i];\n    profit += sell[i] * data[stock][i + 3];\n  }\n  const balance = principal + profit - cost;\n  const averageCost = amount <= 0 ? 0 : (tCost / amount);\n  const marketValue = position * data[stock][buy.length + (next ? 3 : 2)];\n  const totalAsset = balance + marketValue;\n  const totalProfit = totalAsset - principal;\n  const maxBuy = Math.floor(balance / data[stock][buy.length + (next ? 3 : 2)]);\n  return {\n    averageCost,\n    position,\n    totalProfit,\n    balance,\n    marketValue,\n    totalAsset,\n    maxBuy,\n  };\n}\n\nfunction calcProfit(trades) {\n  let totalProfit = 0;\n  for (let i = 0; i < trades.length; i += 1) {\n    const { totalProfit: profit = 0 } = calc(trades[i], 5000, false, true);\n    totalProfit += profit;\n  }\n  return +totalProfit.toFixed(2);\n}\n\nfunction calcFinalData(rawData, moods, uuid, groupID) {\n  const trades = [];\n  for (let i = 0; i < rawData.length; i += 1) {\n    const trials = [];\n    const { buy, sell, stock } = rawData[i];\n    const trade = {\n      buy: [300],\n      sell: [0],\n      stock,\n    };\n    let trialIndex;\n    let totalSell = 0;\n    let sellAfterRise = 0;\n    let sellAfterFall = 0;\n    let totalGain = 0;\n    let totalLose = 0;\n    let prevPosition = 300;\n    let prevAverageCost = 10;\n    let totalRealizedGain = 0;\n    let totalRealizedLose = 0;\n    const sellPriceSubAverageCost = [];\n    for (let j = 1; j < buy.length; j += 1) {\n      trade.sell.push(sell[j]);\n      trade.buy.push(buy[j]);\n      const {\n        averageCost,\n        position,\n        totalProfit,\n        marketValue,\n      } = calc(trade);\n      let paperGain = 0;\n      let paperLose = 0;\n      let realizedGain = 0;\n      let realizedLose = 0;\n      const paperProfit = (data[stock][j + 3] - prevAverageCost) * prevPosition;\n      const realizedProfit = (data[stock][j + 3] - prevAverageCost) * sell[j];\n      if (data[stock][j + 3] > prevAverageCost) {\n        [paperGain, realizedGain] = [paperProfit, realizedProfit];\n      } else if (data[stock][j + 3] < prevAverageCost) {\n        [paperLose, realizedLose] = [paperProfit, realizedProfit];\n      }\n      totalGain += (paperGain + realizedGain);\n      totalLose += (paperLose + realizedLose);\n      totalRealizedGain += realizedGain;\n      totalRealizedLose += realizedLose;\n      prevAverageCost = averageCost;\n      prevPosition = position;\n      const trial = {\n        'Trial': j,\n        'Buy': buy[j],  // 每个 trial 买入的股票数量\n        'Sell': sell[j],  // 每个 trial 卖出的股票数量\n        'Current Stock Price': data[stock][j + 3],  // 当前股价\n        'Weighted Average Purchase Price': +averageCost.toFixed(4), // 加权平均买入价\n        'Position': position, // 持仓\n        'Current Profit': +((data[stock][j + 3] - averageCost) * position).toFixed(4),  // 当前盈亏\n        'Total Profit': +totalProfit.toFixed(4),  // 总盈亏\n        'Market Value': +marketValue.toFixed(4),  // 股票总市值\n        'Paper Gain': +paperGain.toFixed(4),  //  纸面盈利\n        'Paper Lose': +paperLose.toFixed(4),  // 纸面亏损\n        'Realized Gain': +realizedGain.toFixed(4),  // 兑现盈利\n        'Realized Lose': +realizedLose.toFixed(4),  // 兑现亏损\n      };\n      if (sell[j] > 0) {\n        const diff = data[stock][j + 3] - averageCost;\n        sellPriceSubAverageCost.push(diff);\n        trial['The Diff Of SP-WAPP'] = +diff.toFixed(4);  // 卖出价与加权平均买入价的差值\n        if (j > 0) {\n          if (sell[j] > sell[j - 1]) {\n            sellAfterRise += sell[j];\n          } else if (sell[j] < sell[j - 1]) {\n            sellAfterFall += sell[j];\n          }\n        }\n      }\n      trials.push(trial);\n      if (trialIndex === undefined) {\n        totalSell += sell[j];\n        if (totalSell >= 300) {\n          trialIndex = j;\n        }\n      }\n    }\n    const gainRatio = totalGain === 0 ? 0 : totalRealizedGain / totalGain;\n    const lossRatio = totalLose === 0 ? 0 : totalRealizedLose / totalLose;\n    trades.push({\n      'Round': i + 1,\n      'The Average Of SP-WAPP': +(sellPriceSubAverageCost.reduce((a, b) => a + b, 0) / sellPriceSubAverageCost.length).toFixed(4),  // 每轮实验卖出价与加权平均买入价的差值的平均值\n      'Alpha': +((sellAfterRise - sellAfterFall) / (sellAfterRise + sellAfterFall)).toFixed(4), // α = (s+ - s-) / (s+ + s-)\n      'Total Profit': +(trials[trials.length - 1]['Total Profit']).toFixed(4),  // 每轮实验的最终累计盈亏\n      'Trial While Sold 300 Shares': trialIndex,  // 在第几个 trial 累计卖出 300 股\n      'Sell After Rise': sellAfterRise, // 股票上涨后卖出股票数量\n      'Sell After Fall': sellAfterFall, // 股票下跌后卖出股票数量\n      'Trials': trials, // 每个 trial 的交易数据数组\n      'DE': +(gainRatio - lossRatio).toFixed(4),  // DE\n      'Stock': stock, // 股票类型\n    });\n  }\n  return {\n    'Moods': moods,  // 情绪调查\n    'User ID': uuid,  // 用户 ID\n    'Trades': trades, // 交易数据\n    'Group ID': groupID,  // 用户选择分组\n    'Total Profit': trades.reduce((total, trade) => total + trade['Total Profit'], 0),  // 五轮实验的总盈亏\n  };\n}\n\nfunction saveTextAsFile(finalData, uuid, groupID) {\n  const fileText = JSON.stringify(finalData);\n  const fileTextAsBlob = new Blob([fileText], {type: 'text/plain'});\n  const downloadLink = document.createElement('a');\n  downloadLink.download = `stocks-simulation-${uuid}-${groupID}.json`;\n  downloadLink.innerHTML = 'Download File';\n  if (window.webkitURL !== null) {\n    // Chrome allows the link to be clicked\n    // without actually adding it to the DOM.\n    downloadLink.href = window.webkitURL.createObjectURL(fileTextAsBlob);\n  } else {\n    // Firefox requires the link to be added to the DOM\n    // before it can be clicked.\n    downloadLink.href = window.URL.createObjectURL(fileTextAsBlob);\n    downloadLink.onclick = (event) => {\n      document.body.removeChild(event.target);\n    };\n    downloadLink.style.display = 'none';\n    document.body.appendChild(downloadLink);\n  }\n  downloadLink.click();\n}\n\nexport function useInterval(callback, delay = 1000) {\n  const savedCallback = useRef();\n  useEffect(() => {\n    savedCallback.current = callback;\n  });\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n"],"sourceRoot":""}