{"version":3,"sources":["reportWebVitals.js","index.js","App.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","id","fallback","size","delay","App","document","getElementById","Login","lazy","Error","Finish","Notice","Dashboard","Preparation","Questionnaire","STOCK","A","B","C","D","E","CLEAR_PASSWORD","props","login","uuid","groupID","localForage","setItem","setState","closeModal","noticed","showNotice","clearUserInfo","confirm","okText","cancelText","title","content","Password","onChange","event","clearPassword","target","value","onOk","a","warning","clear","trades","status","totalProfit","clearDashboard","removeItem","openNotice","goBack","state","error","window","location","reload","handleStart","stock","buy","sell","mood","handleNext","calcProfit","handleTrade","option","amount","latestData","length","updateKeys","newTrades","slice","splice","onQuestionSubmit","saveTextAsFile","data","fileText","JSON","stringify","fileTextAsBlob","Blob","type","downloadLink","createElement","download","innerHTML","webkitURL","href","createObjectURL","URL","onclick","body","removeChild","style","display","appendChild","click","loading","getItem","nextState","this","getExperimentStatus","active","subTitle","childComponent","backIcon","extra","onClick","danger","className","column","Item","label","visible","onCancel","PureComponent","calc","trade","total","Array","isArray","cost","tCost","profit","position","i","balance","averageCost","marketValue","totalAsset","maxBuy","Math","floor","toFixed"],"mappings":"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","file":"static/js/main.8c2aeac8.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Spin } from 'antd';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div id=\"app\">\n      <Suspense fallback={<Spin size=\"large\" delay={100} />}>\n        <App />\n      </Suspense>\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { lazy, PureComponent } from 'react';\nimport localForage from 'localforage';\nimport {\n  Button,\n  Descriptions,\n  Input,\n  message,\n  Modal,\n  PageHeader,\n  Skeleton,\n} from 'antd';\n\nimport data from './data.json';\n\nconst Login = lazy(() => import('./Login'));\nconst Error = lazy(() => import('./Error'));\nconst Finish = lazy(() => import('./Finish'));\nconst Notice = lazy(() => import('./Notice'));\nconst Dashboard = lazy(() => import('./Dashboard'));\nconst Preparation = lazy(() => import('./Preparation'));\nconst Questionnaire = lazy(() => import('./Questionnaire'));\n\nexport const STOCK = {\n  A: '甲',\n  B: '乙',\n  C: '丙',\n  D: '丁',\n  E: '戊',\n};\nconst CLEAR_PASSWORD = '981107';\n\nexport default class App extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      uuid: '',\n      groupID: '',\n      noticed: false,\n      showNotice: false,\n      trades: [],\n      /**\n       * [{\n       *  stock: A | B | C | D | E,\n       *  buy: [],  // length = 20\n       *  sell: [], // length = 20\n       *  mood: [], // length = 4\n       * }]\n       */\n      status: 0,\n      error: false,\n      totalProfit: 0,\n    };\n    this.clearPassword = '';\n  }\n\n  async componentDidMount() {\n    try {\n      const { uuid = '', groupID = '' } = await localForage.getItem('userInfo') ?? {};\n      const noticed = await localForage.getItem('noticed') ?? false;\n      const nextState = {\n        uuid,\n        groupID,\n        noticed,\n        showNotice: !noticed,\n        loading: false,\n      };\n      if (!uuid || !groupID) {\n        return this.setState(nextState);\n      }\n      const trades = await localForage.getItem('trades') ?? [];\n      const totalProfit = calcProfit(trades);\n      const status = getExperimentStatus(trades);\n      this.setState({\n        ...nextState,\n        trades,\n        status,\n        totalProfit,\n      });\n    } catch (err) {\n      this.setState({\n        error: true,\n        loading: false,\n      });\n    }\n  }\n\n  login = ({ uuid, groupID }) => {\n    localForage.setItem('userInfo', {\n      uuid,\n      groupID,\n    }, () => {\n      this.setState({\n        uuid,\n        groupID,\n      });\n    });\n  }\n\n  closeModal = () => {\n    localForage.setItem('noticed', true, () => {\n      this.setState({\n        noticed: true,\n        showNotice: false,\n      });\n    });\n  }\n\n  clearUserInfo = () => {\n    Modal.confirm({\n      okText: '确定',\n      cancelText: '取消',\n      title: '是否清除用户数据？',\n      content: [\n        <p key=\"text\">清除用户数据后也将会清除实验数据！请谨慎操作！</p>,\n        <p key=\"password\">请主试输入密码：<Input.Password onChange={(event) => {this.clearPassword = event.target.value}} /></p>,\n      ],\n      onOk: async () => {\n        if (this.clearPassword !== CLEAR_PASSWORD) {\n          message.warning('主试权限才能清除用户数据！');\n          return;\n        }\n        this.clearPassword = '';\n\n        await localForage.clear();\n        this.setState({\n          uuid: '',\n          groupID: '',\n          noticed: false,\n          showNotice: true,\n          trades: [],\n          status: 0,\n          totalProfit: 0,\n        });\n      },\n    });\n  }\n\n  clearDashboard = () => {\n    Modal.confirm({\n      okText: '确定',\n      cancelText: '取消',\n      title: '是否清除实验数据',\n      content: [\n        <p key=\"text\">清除实验数据后，您需要重新操作！请谨慎操作！</p>,\n        <p key=\"password\">请主试输入密码：<Input.Password onChange={(event) => {this.clearPassword = event.target.value}} /></p>,\n      ],\n      onOk: async () => {\n        if (this.clearPassword !== CLEAR_PASSWORD) {\n          message.warning('主试权限才能清除实验数据！');\n          return;\n        }\n        this.clearPassword = '';\n\n        await localForage.removeItem('trades');\n        this.setState({\n          trades: [],\n          status: 0,\n          totalProfit: 0,\n        });\n      },\n    });\n  }\n\n  openNotice = () => {\n    this.setState({ showNotice: true });\n  }\n\n  goBack = async () => {\n    const { status } = this.state;\n    if (status === -1) {\n      await localForage.removeItem('trades');\n      this.setState({\n        error: false,\n        trades: [],\n        status: 0,\n      });\n    } else {\n      window.location.reload();\n    }\n  }\n\n  handleStart = (stock) => {\n    this.setState((state) => ({\n      trades: [...state.trades, {\n        stock,\n        buy: [300],\n        sell: [0],\n        mood: [],\n      }],\n      status: 1,\n    }), () => {\n      const { trades } = this.state;\n      localForage.setItem('trades', trades);\n    });\n  }\n\n  handleNext = () => {\n    const { trades } = this.state;\n    const totalProfit = calcProfit(trades);\n    this.setState({\n      status: 2,\n      totalProfit,\n    });\n  }\n\n  handleTrade = (option, amount) => {\n    const { trades } = this.state;\n    const latestData = trades[trades.length - 1];\n    if (latestData) {\n      const { buy, sell, mood } = latestData;\n      if (buy.length !== sell.length) {\n        return this.setState({ status: -1 });\n      }\n      if (buy.length >= 20) {\n        if (mood.length < 4) {\n          this.setState({ status: 2 });\n        } else {\n          this.setState({ status: 3 });\n        }\n      } else {\n        const updateKeys = {};\n        if (option === 'buy') {\n          updateKeys.buy = [...buy, amount];\n          updateKeys.sell = [...sell, 0];\n        } else if (option === 'sell') {\n          updateKeys.buy = [...buy, 0];\n          updateKeys.sell = [...sell, amount];\n        } else {\n          updateKeys.buy = [...buy, 0];\n          updateKeys.sell = [...sell, 0];\n        }\n        const newTrades = trades.slice();\n        newTrades.splice(-1, 1, {\n          ...latestData,\n          ...updateKeys,\n        });\n        this.setState({\n          trades: newTrades,\n        }, () => {\n          localForage.setItem('trades', newTrades);\n        });\n      }\n    } else {\n      this.setState({ status: 0 });\n    }\n  }\n\n  onQuestionSubmit = (mood) => {\n    const { trades } = this.state;\n    const latestData = trades[trades.length - 1];\n    if (!latestData) {\n      return this.setState({\n        status: -1,\n      });\n    }\n    const newTrades = trades.slice();\n    newTrades.splice(-1, 1, {\n      ...latestData,\n      mood,\n    });\n    this.setState({\n      trades: newTrades,\n      status: newTrades.length >= 5 ? 3 : 0,\n    }, () => {\n      localForage.setItem('trades', newTrades);\n    });\n  }\n\n  saveTextAsFile = () => {\n    const { uuid, groupID, trades } = this.state;\n    saveTextAsFile({\n      uuid,\n      groupID,\n      trades,\n    }, uuid, groupID);\n  }\n\n  render() {\n    const {\n      loading,\n      error,\n      uuid,\n      groupID,\n      noticed,\n      showNotice,\n      trades,\n      status,\n      totalProfit,\n     } = this.state;\n\n    if (loading) {\n      return <div id=\"skeleton\"><Skeleton active /></div>;\n    }\n\n    if (error || status === -1) {\n      return <Error status={status} goBack={this.goBack} />;\n    }\n\n    if (!uuid || !groupID) {\n      return <Login login={this.login} />;\n    }\n\n    let subTitle = '';\n    let childComponent = null;\n    const tempStatus = status;\n    switch(tempStatus) {\n      case 0: {\n        subTitle = `即将开始第${trades.length + 1}轮实验`;\n        childComponent = <Preparation trades={trades} groupID={groupID} handleStart={this.handleStart} />;\n        break;\n      }\n      case 1: {\n        subTitle = `正在进行第${trades.length}轮实验`;\n        childComponent = <Dashboard trades={trades} handleTrade={this.handleTrade} handleNext={this.handleNext} />;\n        break;\n      }\n      case 2: {\n        subTitle = `已结束第${trades.length}轮实验`;\n        childComponent = <Questionnaire groupID={groupID} onQuestionSubmit={this.onQuestionSubmit} />;\n        break;\n      }\n      case 3: {\n        subTitle = `所有实验已结束`;\n        childComponent = <Finish totalProfit={totalProfit} saveTextAsFile={this.saveTextAsFile} />;\n        break;\n      }\n      default:\n        break;\n    }\n\n    return (\n      <div id=\"main\">\n        <PageHeader\n          backIcon={false}\n          title=\"股票模拟交易实验\"\n          subTitle={subTitle}\n          extra={[\n            <Button key=\"notice\" type=\"link\" onClick={this.openNotice}>实验须知</Button>,\n            <Button key=\"userInfo\" danger type=\"primary\" onClick={this.clearUserInfo}>清除用户数据</Button>,\n            <Button key=\"trades\" danger onClick={this.clearDashboard}>清除实验数据</Button>,\n          ]}\n        >\n          <div className=\"content\">\n            <Descriptions size=\"small\" column={2}>\n              <Descriptions.Item label=\"被试编号\">\n                {uuid}\n              </Descriptions.Item>\n              <br />\n              <Descriptions.Item label=\"分组编号\">\n                {groupID}\n              </Descriptions.Item>\n            </Descriptions>\n          </div>\n        </PageHeader>\n        {childComponent}\n        <Notice\n          noticed={noticed}\n          visible={showNotice}\n          onCancel={this.closeModal}\n        />\n      </div>\n    );\n  }\n}\n\n/**\n * 传入实验数据返回当前实验状态\n * @param {Array} trades 实验数据\n * @returns {(-1|0|1|2|3)} 实验状态\n */\nfunction getExperimentStatus(trades) {\n  let status;\n  const latestData = trades[trades.length - 1];\n  const {\n    buy = [],\n    sell = [],\n    mood = [],\n  } = latestData || {};\n  if (!latestData) {\n    status = 0;\n  } else if (\n    buy.length >= 20 ||\n    sell.length >= 20\n  ) {\n    if (mood.length < 4) {\n      status = 2;\n    } else if (trades.length >= 5) {\n      status = 3;\n    } else {\n      status = 0;\n    }\n  } else if (\n    buy.length < 20 &&\n    buy.length === sell.length &&\n    mood.length === 0\n  ) {\n    status = 1;\n  } else {\n    status = -1;\n  }\n  return status;\n}\n\nexport function calc(trade, total = false) {\n  const { stock, buy, sell } = trade;\n  if (\n    !stock\n    || !Array.isArray(buy)\n    || !Array.isArray(sell)\n    || (total && (buy.length < 20 || sell.length < 20))\n  ) {\n    return {};\n  }\n  let cost = 0;\n  let tCost = 0;\n  let amount = 0;\n  let profit = 0;\n  let position = 0;\n  for (let i = 0; i < buy.length; i += 1) {\n    cost += buy[i] * data[stock][i + 3];\n    if (sell[i] === position && position !== 0) {\n      tCost = 0;\n      amount = 0;\n    } else {\n      tCost += buy[i] * data[stock][i + 3];\n      amount += buy[i];\n    }\n    position += buy[i] - sell[i];\n    profit += sell[i] * data[stock][i + 3];\n  }\n  const balance = 5000 + profit - cost;\n  const averageCost = amount <= 0 ? 0 : (tCost / amount);\n  const marketValue = position * data[stock][buy.length + 3];\n  const totalAsset = balance + marketValue;\n  const totalProfit = totalAsset - 5000;\n  const maxBuy = Math.floor(balance / data[stock][buy.length + 3])\n  return {\n    averageCost,\n    position,\n    totalProfit,\n    balance,\n    marketValue,\n    totalAsset,\n    maxBuy,\n  };\n}\n\nfunction calcProfit(trades) {\n  let totalProfit = 0;\n  for (let i = 0; i < trades.length; i += 1) {\n    const { totalProfit: profit = 0 } = calc(trades[i], true);\n    totalProfit += profit;\n  }\n  return +totalProfit.toFixed(2);\n}\n\nfunction saveTextAsFile(data, uuid, groupID) {\n  const fileText = JSON.stringify(data);\n  const fileTextAsBlob = new Blob([fileText], {type: 'text/plain'});\n  const downloadLink = document.createElement('a');\n  downloadLink.download = `stocks-simulation-${uuid}-${groupID}.txt`;\n  downloadLink.innerHTML = 'Download File';\n  if (window.webkitURL !== null) {\n    // Chrome allows the link to be clicked\n    // without actually adding it to the DOM.\n    downloadLink.href = window.webkitURL.createObjectURL(fileTextAsBlob);\n  } else {\n    // Firefox requires the link to be added to the DOM\n    // before it can be clicked.\n    downloadLink.href = window.URL.createObjectURL(fileTextAsBlob);\n    downloadLink.onclick = (event) => {\n      document.body.removeChild(event.target);\n    };\n    downloadLink.style.display = 'none';\n    document.body.appendChild(downloadLink);\n  }\n  downloadLink.click();\n}\n"],"sourceRoot":""}