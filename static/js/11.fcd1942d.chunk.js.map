{"version":3,"sources":["Questionnaire.js","../node_modules/antd/es/row/style/css.js","../node_modules/antd/es/col/style/css.js","../node_modules/antd/es/row/index.js","../node_modules/antd/es/col/index.js"],"names":["TABLE","key","title","10","20","30","head","columns","OPTION","lowPoint","highPoint","Questionnaire","trades","groupID","onQuestionSubmit","useForm","form","useState","tableArray","toggleTable","optionArray","toggleOption","stock","length","id","layout","onFinish","map","table","num","Item","label","replace","STOCK","style","flexDirection","gutter","className","index","span","column","idx","Array","fill","_","value","checked","onClick","tempTable","slice","changeTable","option","name","rules","required","message","wrap","tempOption","changeOption","type","i","warning","j","submit","Row","Col"],"mappings":"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","file":"static/js/11.fcd1942d.chunk.js","sourcesContent":["import { Button, Col, Form, message, Radio, Row } from 'antd';\nimport React, { useState } from 'react';\nimport { STOCK } from './App';\n\nconst TABLE = [{\n  key: '1',\n  title: {\n    10: '1. 在本轮任务中，对于投资顾问购买的300股XX股票，面对以下情况时(如果在本轮任务中，没有出现以下某种或者某些情况，请想象出现了这些情况)，您在多大程度上感受到自豪的情绪[矩阵单选题]',\n    20: '1. 在本轮任务中，对于您自己购买的300股XX股票，面对以下情况时(如果在本轮任务中，没有出现以下某种或者某些情况，请想象出现了这些情况)，您在多大程度上感受到自豪的情绪[矩阵单选题]',\n    30: '1. 在本轮任务中，对于投资顾问推荐下您自己购买的300股XX股票，面对以下情况时(如果在本轮任务中，没有出现以下某种或者某些情况，请想象出现了这些情况)，您在多大程度上感受到自豪的情绪[矩阵单选题]',\n  },\n  head: [\n    '',\n    '非常不自豪',\n    '比较不自豪',\n    '有一点不自豪',\n    '不确定',\n    '有一点自豪',\n    '比较自豪',\n    '非常自豪',\n  ],\n  columns: [\n    '股价上涨后卖出，下一交易期股价下跌',\n    '股价上涨后持仓不变/买入，下一交易期股价上涨',\n    '股价下跌后持仓不变/买入，下一交易期股价上涨',\n    '股价下跌后卖出，下一交易期股价下跌',\n    '股价上涨后卖出，下一交易期股价上涨',\n    '股价上涨后持仓不变/买入，下一交易期股价下跌',\n    '股价下跌后持仓不变/买入，下一交易期股价下跌',\n    '股价下跌后卖出，下一交易期股价上涨',\n  ],\n}, {\n  key: '2',\n  title: {\n    10: '2. 在本轮任务中，对于投资顾问购买的300股XX股票，面对以下情况时 (如果在本轮任务中，没有出现以下某种或者某些情况，请想象出现了这些情况) ，您在多大程度上感受到后悔的情绪[矩阵单选题]',\n    20: '2. 在本轮任务中，对于您自己购买的300股XX股票，面对以下情况时 (如果在本轮任务中，没有出现以下某种或者某些情况，请想象出现了这些情况) ，您在多大程度上感受到后悔的情绪[矩阵单选题]',\n    30: '2. 在本轮任务中，对于投资顾问推荐下您自己购买的300股XX股票，面对以下情况时 (如果在本轮任务中，没有出现以下某种或者某些情况，请想象出现了这些情况) ，您在多大程度上感受到后悔的情绪[矩阵单选题]',\n  },\n  head: [\n    '',\n    '非常不后悔',\n    '比较不后悔',\n    '有一点不后悔',\n    '不确定',\n    '有一点后悔',\n    '比较后悔',\n    '非常后悔',\n  ],\n  columns: [\n    '股价上涨后卖出，下一交易期股价上涨',\n    '股价上涨后持仓不变/买入，下一交易期股价下跌',\n    '股价下跌后持仓不变/买入，下一交易期股价下跌',\n    '股价下跌后卖出，下一交易期股价上涨',\n    '股价上涨后卖出，下一交易期股价下跌',\n    '股价上涨后持仓不变/买入，下一交易期股价上涨',\n    '股价下跌后持仓不变/买入，下一交易期股价上涨',\n    '股价下跌后卖出，下一交易期股价下跌',\n  ],\n}];\nconst OPTION = [{\n  key: '3',\n  lowPoint: '压力非常小',\n  highPoint: '压力非常大',\n  10: '3. 在本轮任务中，您在卖出投资顾问购买的300股XX股票时有多大压力？',\n  20: '3. 在本轮任务中，您在卖出最开始自己选择并购买的300股XX股票时有多大压力？',\n  30: '3. 在本轮任务中，您在卖出别人推荐下自己选择并购买的300股XX股票时有多大压力？',\n}, {\n  key: '4',\n  lowPoint: '完全没有责任',\n  highPoint: '负有完全责任',\n  10: '4. 在本轮任务中，若卖出投资顾问购买的300股XX股票后发现卖错了，您认为您需要为这样的错误决策负多大的责任？',\n  20: '4. 在本轮任务中，若卖出最开始自己选择并购买的300股XX股票后发现卖错了，您认为您需要为这样的错误决策负多大的责任？',\n  30: '4. 在本轮任务中，您在卖出别人推荐下自己选择并购买的300股XX股票后发现卖错了，您认为您需要为这样的错误决策负多大的责任？',\n}];\n\nfunction Questionnaire({ trades, groupID, onQuestionSubmit }) {\n  const [form] = Form.useForm();\n  const [tableArray, toggleTable] = useState([[], []]);\n  const [optionArray, toggleOption] = useState([]);\n  const changeTable = (num, index, value) => {\n    if (!tableArray[num][index] || +tableArray[num][index] !== value) {\n      const tempTable = tableArray.slice();\n      tempTable[num][index] = value;\n      toggleTable(tempTable);\n    }\n  };\n  const changeOption = (num, value) => {\n    if (!optionArray[num] || +optionArray[num] !== value) {\n      const tempOption = optionArray.slice();\n      tempOption[num] = value;\n      toggleOption(tempOption);\n    }\n  };\n  const checkAndSubmit = () => {\n    for (let i = 0; i < tableArray.length; i += 1) {\n      if (!tableArray[i].length) {\n        return message.warning(`请完成第${i + 1}题！`);\n      }\n      if (tableArray[i].length < 8) {\n        return message.warning(`第${i + 1}题第${tableArray[i].length + 1}个选项为必填项！`);\n      }\n      for (let j = 0; j < tableArray[i].length; j += 1) {\n        if (!tableArray[i][j]) {\n          return message.warning(`第${i + 1}题第${j + 1}个选项为必填项！`);\n        }\n      }\n    }\n    form.submit();\n  };\n  const { stock } = trades[trades.length - 1] ?? {};\n\n  return (\n    <Form\n      form={form}\n      id=\"question\"\n      layout=\"vertical\"\n      onFinish={() => onQuestionSubmit([...tableArray, ...optionArray])}\n    >\n      {\n        TABLE.map((table, num) => (\n          <Form.Item\n            key={table.key}\n            label={table.title[groupID].replace('XX', STOCK[stock])}\n            style={{ flexDirection: 'unset' }}\n          >\n            <Row gutter={[8, 16]} className=\"question-head\">\n              {\n                table.head.map((title, index) => (\n                  <Col key={index} span={3} className=\"question-radio\">{title}</Col>\n                ))\n              }\n            </Row>\n            {\n              table.columns.map((column, idx) => (\n                <Row key={idx} gutter={[8, 16]} className=\"question-column\">\n                  <Col span={3}>{column}</Col>\n                  {\n                    Array(7).fill('').map((_, index) => (\n                      <Col key={index} span={3} className=\"question-radio\">\n                        <Radio\n                          value={index + 1}\n                          checked={tableArray[num][idx] && +tableArray[num][idx] === index + 1}\n                          onClick={() => changeTable(num, idx, index + 1)}\n                        />\n                      </Col>\n                    ))\n                  }\n                </Row>\n              ))\n            }\n          </Form.Item>\n        ))\n      }\n      {\n        OPTION.map((option, num) => (\n          <Form.Item\n            key={option.key}\n            name={option.key}\n            label={option[groupID].replace('XX', STOCK[stock])}\n            style={{ flexDirection: 'unset' }}\n            rules={[\n              { required: true, message: '该项为必选项' }\n            ]}\n          >\n            <Row gutter={[8, 16]} wrap={false}>\n              <Col span={3}>{option.lowPoint}</Col>\n                {\n                  Array(7).fill('').map((_, index) => (\n                    <Col key={index} span={3} className=\"question-radio\">\n                      <Radio\n                        value={index + 1}\n                        checked={optionArray[num] && +optionArray[num] === index + 1}\n                        onClick={() => changeOption(num, index + 1)}\n                      >{index + 1}</Radio>\n                    </Col>\n                  ))\n                }\n              <Col span={3}>{option.highPoint}</Col>\n            </Row>\n          </Form.Item>\n        ))\n      }\n      <Form.Item>\n        <Button\n          type=\"primary\"\n          onClick={checkAndSubmit}\n        >确定</Button>\n      </Form.Item>\n    </Form>\n  );\n}\n\nexport default Questionnaire;\n","import '../../style/index.css'; // style dependencies\n// deps-lint-skip: grid\n\nimport '../../grid/style/css';","import '../../style/index.css'; // style dependencies\n// deps-lint-skip: grid\n\nimport '../../grid/style/css';","import { Row } from '../grid';\nexport default Row;","import { Col } from '../grid';\nexport default Col;"],"sourceRoot":""}