{"version":3,"sources":["Practice.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"names":["Dashboard","lazy","Practice","handlePracticeNext","useState","stock","buy","sell","trades","changeTrades","trials","principal","handleNext","handleTrade","option","amount","length","updateKeys","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","unsupportedIterableToArray","TypeError"],"mappings":"kLAEMA,EAAYC,gBAAK,kBAAM,8DA4CdC,UA1Cf,YAA2C,IAAvBC,EAAsB,EAAtBA,mBAAsB,EACTC,mBAAS,CAAEC,MAAO,WAAYC,IAAK,GAAIC,KAAM,KADpC,mBACjCC,EADiC,KACzBC,EADyB,KA4BxC,OACE,gCACE,sWACA,cAACT,EAAD,CACEU,OAAQ,EACRC,UAAW,IACXH,OAAQ,CAACA,GACTI,WAZa,WAAO,IAChBN,EAAcE,EAAdF,IAAKC,EAASC,EAATD,KACbJ,EAAmB,CAAEG,MAAKC,UAWtBM,YAlCc,SAACC,EAAQC,GAAY,IAC/BT,EAAcE,EAAdF,IAAKC,EAASC,EAATD,KACTD,EAAIU,QAAU,GAChBb,EAAmB,CAAEG,MAAKC,SAE5B,IAAMU,EAAa,GACJ,QAAXH,GACFG,EAAWX,IAAX,sBAAqBA,GAArB,CAA0BS,IAC1BE,EAAWV,KAAX,sBAAsBA,GAAtB,CAA4B,KACR,SAAXO,GACTG,EAAWX,IAAX,sBAAqBA,GAArB,CAA0B,IAC1BW,EAAWV,KAAX,sBAAsBA,GAAtB,CAA4BQ,MAE5BE,EAAWX,IAAX,sBAAqBA,GAArB,CAA0B,IAC1BW,EAAWV,KAAX,sBAAsBA,GAAtB,CAA4B,KAE9BE,EAAa,2BACRD,GACAS,Y,+ECpBM,SAASC,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKV,SAAWI,GAH8CO,GAAK,IAK9E,MAAOU,GACPT,GAAK,EACLC,EAAKQ,EACL,QACA,IACOV,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAkB,EAAA,GAA2BnB,EAAKC,IGLjF,WACb,MAAM,IAAImB,UAAU,6IHIgF","file":"static/js/13.725df850.chunk.js","sourcesContent":["import React, { lazy, useState } from 'react';\n\nconst Dashboard = lazy(() => import('./Dashboard'));\n\nfunction Practice({ handlePracticeNext }) {\n  const [trades, changeTrades] = useState({ stock: 'Practice', buy: [], sell: [] });\n  const handleTrade = (option, amount) => {\n    const { buy, sell } = trades;\n    if (buy.length >= 8) {\n      handlePracticeNext({ buy, sell });\n    }\n    const updateKeys = {};\n    if (option === 'buy') {\n      updateKeys.buy = [...buy, amount];\n      updateKeys.sell = [...sell, 0];\n    } else if (option === 'sell') {\n      updateKeys.buy = [...buy, 0];\n      updateKeys.sell = [...sell, amount];\n    } else {\n      updateKeys.buy = [...buy, 0];\n      updateKeys.sell = [...sell, 0];\n    }\n    changeTrades({\n      ...trades,\n      ...updateKeys,\n    });\n  };\n  const handleNext = () => {\n    const { buy, sell } = trades;\n    handlePracticeNext({ buy, sell });\n  };\n\n  return (\n    <div>\n      <h3>首先进入练习环节。该环节的收益不计入最终累计收益，仅为熟悉操作所用。请根据屏幕呈现的信息，独立作出交易决策。</h3>\n      <Dashboard\n        trials={8}\n        principal={1000}\n        trades={[trades]}\n        handleNext={handleNext}\n        handleTrade={handleTrade}\n      />\n    </div>\n  );\n}\n\nexport default Practice;\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}