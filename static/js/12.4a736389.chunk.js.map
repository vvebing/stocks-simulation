{"version":3,"sources":["Dashboard.js"],"names":["Dashboard","props","getOption","myChart","option","animationDelay","animationDurationUpdate","grid","left","right","top","bottom","containLabel","title","text","tooltip","trigger","axisPointer","type","lineStyle","width","xAxis","boundaryGap","data","Array","fill","map","_","index","yAxis","showMinLabel","showMaxLabel","min","value","parseInt","max","series","name","A","markPoint","setOption","lineRef","createRef","this","echarts","getInstanceByDom","current","undefined","init","id","className","ref","bordered","column","Item","label","justify","span","size","precision","defaultValue","block","danger","PureComponent"],"mappings":"yXAUqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAYRC,UAAY,WACV,GAAK,EAAKC,QAAV,CAEA,IAAMC,EAAS,CACbC,eAAgB,IAChBC,wBAAyB,EACzBC,KAAM,CACJC,KAAM,IACNC,MAAO,OACPC,IAAK,OACLC,OAAQ,IACRC,cAAc,GAEhBC,MAAO,CACLC,KAAM,4BAERC,QAAS,CACPC,QAAS,OACTC,YAAa,CACXC,KAAM,OACNC,UAAW,CACTC,MAAO,IACPF,KAAM,YAIZG,MAAO,CACLC,aAAa,EACbC,KAAMC,MAAM,IAAIC,KAAK,IAAIC,KAAI,SAACC,EAAGC,GAAJ,sBAAuBA,OAEtDC,MAAO,CACLC,cAAc,EACdC,cAAc,EACdC,IAAK,SAACC,GAAD,OAAWC,SAASD,EAAMD,IAAM,EAAG,KACxCG,IAAK,SAACF,GAAD,OAAWC,SAASD,EAAME,IAAM,EAAG,MAE1CC,OAAQ,CACN,CACEC,KAAM,2BACNnB,KAAM,OACNK,KAAK,CAAE,IAAH,mBAAUA,EAAKe,IACnBC,UAAW,CACThB,KAAM,CACJ,CAAEL,KAAM,MAAOmB,KAAM,sBACrB,CAAEnB,KAAM,MAAOmB,KAAM,2BAM/B,EAAKlC,QAAQqC,UAAUpC,KA7DvB,EAAKqC,QAAUC,sBAFE,E,gEAMjBC,KAAKxC,QAAUyC,IAAQC,iBAAiBF,KAAKF,QAAQK,cAChCC,IAAjBJ,KAAKxC,UACPwC,KAAKxC,QAAUyC,IAAQI,KAAKL,KAAKF,QAAQK,UAE3CH,KAAKzC,c,+BAyDL,OACE,sBAAK+C,GAAG,YAAR,UACE,qBAAKC,UAAU,QAAQC,IAAKR,KAAKF,UACjC,sBAAKS,UAAU,OAAf,UACE,qBAAKA,UAAU,WAAf,SACE,oBAAcE,UAAQ,EAACC,OAAQ,EAAGxC,MAAM,2BAAxC,UACE,kBAAcyC,KAAd,CAAmBC,MAAM,2BAAzB,kBACA,kBAAcD,KAAd,CAAmBC,MAAM,eAAzB,kBACA,kBAAcD,KAAd,CAAmBC,MAAM,eAAzB,iBACA,kBAAcD,KAAd,CAAmBC,MAAM,2BAAzB,eACA,kBAAcD,KAAd,CAAmBC,MAAM,qBAAzB,eACA,kBAAcD,KAAd,CAAmBC,MAAM,2BAAzB,kBACA,kBAAcD,KAAd,CAAmBC,MAAM,2BAAzB,kBACA,kBAAcD,KAAd,CAAmBC,MAAM,qBAAzB,uBAGJ,sBAAKL,UAAU,SAAf,UACE,oBAAKM,QAAQ,eAAb,UACE,mBAAKC,KAAM,EAAGP,UAAU,cAAxB,kDACA,mBAAKO,KAAM,EAAX,SACE,mBACEzB,IAAK,EACLG,IAAK,GACLuB,KAAK,QACLC,UAAW,EACXC,aAAc,MAGlB,mBAAKH,KAAM,EAAX,SACE,mBAAQvC,KAAK,UAAUwC,KAAK,QAAQG,OAAK,EAAzC,+BAGJ,oBAAKL,QAAQ,eAAb,UACE,mBAAKC,KAAM,EAAGP,UAAU,cAAxB,kDACA,mBAAKO,KAAM,EAAX,SACE,mBACEzB,IAAK,EACLG,IAAK,GACLuB,KAAK,QACLC,UAAW,EACXC,aAAc,MAGlB,mBAAKH,KAAM,EAAX,SACE,mBAAQvC,KAAK,UAAUwC,KAAK,QAAQI,QAAM,EAACD,OAAK,EAAhD,+BAGJ,mBAAKL,QAAQ,SAAb,SACE,mBAAKC,KAAM,GAAX,SAAe,mBAAQvC,KAAK,UAAUwC,KAAK,QAAQG,OAAK,EAAzC,uD,GApHUE,kB","file":"static/js/12.4a736389.chunk.js","sourcesContent":["import React, { createRef, PureComponent } from 'react';\nimport echarts from 'echarts/lib/echarts';\nimport 'echarts/lib/chart/line';\nimport 'echarts/lib/component/title';\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/markPoint';\nimport { Button, Col, Descriptions, InputNumber, Row } from 'antd';\n\nimport data from './data.json';\n\nexport default class Dashboard extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.lineRef = createRef();\n  }\n\n  componentDidMount() {\n    this.myChart = echarts.getInstanceByDom(this.lineRef.current);\n    if (this.myChart === undefined) {\n      this.myChart = echarts.init(this.lineRef.current);\n    }\n    this.getOption();\n  }\n\n  getOption = () => {\n    if (!this.myChart) return;\n\n    const option = {\n      animationDelay: 200,\n      animationDurationUpdate: 0,\n      grid: {\n        left: '0',\n        right: '10px',\n        top: '35px',\n        bottom: '0',\n        containLabel: true,\n      },\n      title: {\n        text: '股票走势',\n      },\n      tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n          type: 'line',\n          lineStyle: {\n            width: 1.5,\n            type: 'dashed',\n          },\n        },\n      },\n      xAxis: {\n        boundaryGap: false,\n        data: Array(24).fill('').map((_, index) => `Point ${index}`),\n      },\n      yAxis: {\n        showMinLabel: false,\n        showMaxLabel: false,\n        min: (value) => parseInt(value.min - 1, 10),\n        max: (value) => parseInt(value.max + 2, 10),\n      },\n      series: [\n        {\n          name: '股票价格',\n          type: 'line',\n          data: [10, ...data.A],\n          markPoint: {\n            data: [\n              { type: 'min', name: '最低值' },\n              { type: 'max', name: '最高值' },\n            ],\n          },\n        }\n      ],\n    };\n    this.myChart.setOption(option);\n  }\n\n  render() {\n    return (\n      <div id=\"dashboard\">\n        <div className=\"chart\" ref={this.lineRef} />\n        <div className=\"data\">\n          <div className=\"describe\">\n            <Descriptions bordered column={1} title=\"资产配置\">\n              <Descriptions.Item label=\"当前股价\">10.0</Descriptions.Item>\n              <Descriptions.Item label=\"成本\">10.0</Descriptions.Item>\n              <Descriptions.Item label=\"持仓\">300</Descriptions.Item>\n              <Descriptions.Item label=\"当前盈亏\">0</Descriptions.Item>\n              <Descriptions.Item label=\"总盈亏\">0</Descriptions.Item>\n              <Descriptions.Item label=\"现金余额\">2000</Descriptions.Item>\n              <Descriptions.Item label=\"股票市值\">3000</Descriptions.Item>\n              <Descriptions.Item label=\"总资产\">5000</Descriptions.Item>\n            </Descriptions>\n          </div>\n          <div className=\"option\">\n            <Row justify=\"space-around\">\n              <Col span={6} className=\"input-label\">买入股票数量</Col>\n              <Col span={8}>\n                <InputNumber\n                  min={0}\n                  max={10}\n                  size=\"large\"\n                  precision={0}\n                  defaultValue={0}\n                />\n              </Col>\n              <Col span={6}>\n                <Button type=\"primary\" size=\"large\" block>买入</Button>\n              </Col>\n            </Row>\n            <Row justify=\"space-around\">\n              <Col span={6} className=\"input-label\">卖出股票数量</Col>\n              <Col span={8}>\n                <InputNumber\n                  min={0}\n                  max={10}\n                  size=\"large\"\n                  precision={0}\n                  defaultValue={0}\n                />\n              </Col>\n              <Col span={6}>\n                <Button type=\"primary\" size=\"large\" danger block>卖出</Button>\n              </Col>\n            </Row>\n            <Row justify=\"center\">\n              <Col span={12}><Button type=\"primary\" size=\"large\" block>继续持有</Button></Col>\n            </Row>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}