{"version":3,"sources":["reportWebVitals.js","index.js","App.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","id","fallback","size","delay","App","document","getElementById","Login","lazy","Error","Finish","Notice","Practice","Dashboard","Preparation","PracticeTest","Questionnaire","STOCK","A","B","C","D","E","CLEAR_PASSWORD","props","login","uuid","groupID","localForage","setItem","setState","closeModal","noticed","showNotice","clearUserInfo","confirm","okText","cancelText","title","content","Password","onChange","event","clearPassword","target","value","onOk","a","warning","clear","trades","status","practice","totalProfit","clearDashboard","removeItem","openNotice","goBack","state","error","window","location","reload","handleStart","stock","buy","sell","mood","handleNext","calcProfit","handleTrade","option","amount","latestData","length","updateKeys","newTrades","slice","splice","onQuestionSubmit","saveTextAsFile","calcFinalData","handlePracticeNext","loading","getItem","nextState","this","test","getExperimentStatus","active","subTitle","childComponent","tempStatus","backIcon","extra","type","onClick","danger","className","column","Item","label","visible","onCancel","PureComponent","calc","trade","principal","total","Array","isArray","cost","tCost","profit","position","i","data","balance","averageCost","marketValue","totalAsset","maxBuy","Math","floor","toFixed","rawData","trials","trialIndex","totalSell","sellAfterRise","sellAfterFall","totalGain","totalLose","totalRealizedGain","totalRealizedLose","sellPriceSubAverageCost","j","push","paperGain","paperLose","realizedGain","realizedLose","currentProfit","realizedProfit","trial","diff","undefined","gainRatio","lossRatio","reduce","b","finalData","fileText","JSON","stringify","fileTextAsBlob","Blob","downloadLink","createElement","download","innerHTML","webkitURL","href","createObjectURL","URL","onclick","body","removeChild","style","display","appendChild","click"],"mappings":"yOAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,qBAAKC,GAAG,MAAR,SACE,cAAC,WAAD,CAAUC,SAAU,mBAAMC,KAAK,QAAQC,MAAO,MAA9C,SACE,cAACC,EAAA,EAAD,UAINC,SAASC,eAAe,SAM1BlB,K,s9BCPMmB,EAAQC,gBAAK,kBAAM,+DACnBC,EAAQD,gBAAK,kBAAM,wDACnBE,EAASF,gBAAK,kBAAM,wDACpBG,EAASH,gBAAK,kBAAM,+DACpBI,EAAWJ,gBAAK,kBAAM,+DACtBK,EAAYL,gBAAK,kBAAM,+DACvBM,EAAcN,gBAAK,kBAAM,6EACzBO,EAAeP,gBAAK,kBAAM,+DAC1BQ,EAAgBR,gBAAK,kBAAM,+DAEpBS,EAAQ,CACnBC,EAAG,SACHC,EAAG,SACHC,EAAG,SACHC,EAAG,SACHC,EAAG,SACHV,SAAU,4BAENW,EAAiB,SAEFnB,E,kDACnB,WAAYoB,GAAQ,IAAD,8BACjB,cAAMA,IAgERC,MAAQ,YAAwB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACfC,IAAYC,QAAQ,WAAY,CAC9BH,OACAC,YACC,WACD,EAAKG,SAAS,CACZJ,OACAC,gBAxEa,EA6EnBI,WAAa,WACXH,IAAYC,QAAQ,WAAW,GAAM,WACnC,EAAKC,SAAS,CACZE,SAAS,EACTC,YAAY,QAjFC,EAsFnBC,cAAgB,WACd,IAAMC,QAAQ,CACZC,OAAQ,eACRC,WAAY,eACZC,MAAO,yDACPC,QAAS,CACP,0KAAO,QACP,iFAA0B,kBAAOC,SAAP,CAAgBC,SAAU,SAACC,GAAW,EAAKC,cAAgBD,EAAME,OAAOC,WAA3F,aAETC,KAAK,WAAD,4BAAE,sBAAAC,EAAA,yDACA,EAAKJ,gBAAkBpB,EADvB,uBAEF,IAAQyB,QAAQ,kFAFd,iCAKJ,EAAKL,cAAgB,GALjB,SAOEf,IAAYqB,QAPd,OAQJ,EAAKnB,SAAS,CACZJ,KAAM,GACNC,QAAS,GACTK,SAAS,EACTC,YAAY,EACZiB,OAAQ,GACRC,OAAQ,EACRC,SAAU,GACVC,YAAa,IAhBX,2CAAF,kDAAC,MA/FU,EAqHnBC,eAAiB,WACf,IAAMnB,QAAQ,CACZC,OAAQ,eACRC,WAAY,eACZC,MAAO,mDACPC,QAAS,CACP,oKAAO,QACP,iFAA0B,kBAAOC,SAAP,CAAgBC,SAAU,SAACC,GAAW,EAAKC,cAAgBD,EAAME,OAAOC,WAA3F,aAETC,KAAK,WAAD,4BAAE,sBAAAC,EAAA,yDACA,EAAKJ,gBAAkBpB,EADvB,uBAEF,IAAQyB,QAAQ,kFAFd,iCAKJ,EAAKL,cAAgB,GALjB,SAOEf,IAAY2B,WAAW,UAPzB,OAQJ,EAAKzB,SAAS,CACZoB,OAAQ,GACRC,OAAQ,EACRE,YAAa,IAXX,2CAAF,kDAAC,MA9HU,EA+InBG,WAAa,WACX,EAAK1B,SAAS,CAAEG,YAAY,KAhJX,EAmJnBwB,OAnJmB,sBAmJV,sBAAAV,EAAA,0DAES,IADG,EAAKW,MAAhBP,OADD,gCAGCvB,IAAY2B,WAAW,UAHxB,OAIL,EAAKzB,SAAS,CACZ6B,OAAO,EACPT,OAAQ,GACRC,OAAQ,IAPL,sBAULS,OAAOC,SAASC,SAVX,2CAnJU,EAiKnBC,YAAc,SAACC,GACb,EAAKlC,UAAS,SAAC4B,GAAD,MAAY,CACxBR,OAAO,GAAD,mBAAMQ,EAAMR,QAAZ,CAAoB,CACxBc,QACAC,IAAK,CAAC,KACNC,KAAM,CAAC,GACPC,KAAM,MAERhB,OAAQ,MACN,WAAO,IACDD,EAAW,EAAKQ,MAAhBR,OACRtB,IAAYC,QAAQ,SAAUqB,OA5Kf,EAgLnBkB,WAAa,WAAO,IAEZf,EAAcgB,EADD,EAAKX,MAAhBR,QAER,EAAKpB,SAAS,CACZqB,OAAQ,EACRE,iBArLe,EAyLnBiB,YAAc,SAACC,EAAQC,GAAY,IACzBtB,EAAW,EAAKQ,MAAhBR,OACFuB,EAAavB,EAAOA,EAAOwB,OAAS,GAC1C,GAAID,EAAY,CAAC,IACPR,EAAoBQ,EAApBR,IAAKC,EAAeO,EAAfP,KAAMC,EAASM,EAATN,KACnB,GAAIF,EAAIS,SAAWR,EAAKQ,OACtB,OAAO,EAAK5C,SAAS,CAAEqB,QAAS,IAElC,GAAIc,EAAIS,QAAU,GACZP,EAAKO,OAAS,EAChB,EAAK5C,SAAS,CAAEqB,OAAQ,IAExB,EAAKrB,SAAS,CAAEqB,OAAQ,QAErB,CACL,IAAMwB,EAAa,GACJ,QAAXJ,GACFI,EAAWV,IAAX,sBAAqBA,GAArB,CAA0BO,IAC1BG,EAAWT,KAAX,sBAAsBA,GAAtB,CAA4B,KACR,SAAXK,GACTI,EAAWV,IAAX,sBAAqBA,GAArB,CAA0B,IAC1BU,EAAWT,KAAX,sBAAsBA,GAAtB,CAA4BM,MAE5BG,EAAWV,IAAX,sBAAqBA,GAArB,CAA0B,IAC1BU,EAAWT,KAAX,sBAAsBA,GAAtB,CAA4B,KAE9B,IAAMU,EAAY1B,EAAO2B,QACzBD,EAAUE,QAAQ,EAAG,EAArB,2BACKL,GACAE,IAEL,EAAK7C,SAAS,CACZoB,OAAQ0B,IACP,WACDhD,IAAYC,QAAQ,SAAU+C,YAIlC,EAAK9C,SAAS,CAAEqB,OAAQ,KA/NT,EAmOnB4B,iBAAmB,SAACZ,GAAU,IACpBjB,EAAW,EAAKQ,MAAhBR,OACFuB,EAAavB,EAAOA,EAAOwB,OAAS,GAC1C,IAAKD,EACH,OAAO,EAAK3C,SAAS,CACnBqB,QAAS,IAGb,IAAMyB,EAAY1B,EAAO2B,QACzBD,EAAUE,QAAQ,EAAG,EAArB,2BACKL,GADL,IAEEN,UAEF,EAAKrC,SAAS,CACZoB,OAAQ0B,EACRzB,OAAQyB,EAAUF,QAAU,EAAI,EAAI,IACnC,WACD9C,IAAYC,QAAQ,SAAU+C,OApPf,EAwPnBI,eAAiB,WACf,IAAM7C,QAAQ,CACZC,OAAQ,eACRC,WAAY,eACZC,MAAO,uCACPC,QAAS,CACP,kMAAO,QACP,iFAA0B,kBAAOC,SAAP,CAAgBC,SAAU,SAACC,GAAW,EAAKC,cAAgBD,EAAME,OAAOC,WAA3F,aAETC,KAAK,WAAD,4BAAE,gCAAAC,EAAA,yDACA,EAAKJ,gBAAkBpB,EADvB,uBAEF,IAAQyB,QAAQ,kFAFd,0BAKJ,EAAKL,cAAgB,GALjB,EAO8B,EAAKe,MAA/BhC,EAPJ,EAOIA,KAAMC,EAPV,EAOUA,QACdqD,EAAeC,EARX,EAOmB/B,OACcxB,EAAMC,GAAUD,EAAMC,GARvD,2CAAF,kDAAC,MAjQU,EA8QnBuD,mBAAqB,SAAC9B,GACpB,EAAKtB,UAAS,SAAC4B,GAAD,MAAY,CACxBN,SAAS,2BACJM,EAAMN,UACNA,OAEH,WAAO,IACDA,EAAa,EAAKM,MAAlBN,SACRxB,IAAYC,QAAQ,WAAYuB,OApRlC,EAAKM,MAAQ,CACXyB,SAAS,EACTzD,KAAM,GACNC,QAAS,GACTK,SAAS,EACTC,YAAY,EACZmB,SAAU,GAKVF,OAAQ,GASRC,OAAQ,EACRQ,OAAO,EACPN,YAAa,GAEf,EAAKV,cAAgB,GA1BJ,E,qOA+B2Bf,IAAYwD,QAAQ,Y,oJAAe,G,0BAArE1D,Y,MAAO,G,MAAIC,e,MAAU,G,YACPC,IAAYwD,QAAQ,W,wJAAc,E,WAAlDpD,E,KACAqD,EAAY,CAChB3D,OACAC,UACAK,UACAC,YAAaD,EACbmD,SAAS,GAENzD,GAASC,E,0CACL2D,KAAKxD,SAASuD,I,yBAEAzD,IAAYwD,QAAQ,Y,uJAAe,G,WAApDhC,E,KACNiC,EAAUjC,SAAWA,EAChBA,EAASa,KAAQb,EAASc,MAASd,EAASmC,K,0CACxCD,KAAKxD,SAASuD,I,yBAEFzD,IAAYwD,QAAQ,U,2JAAa,G,QAAhDlC,E,MACAG,EAAcgB,EAAWnB,GACzBC,EAASqC,EAAoBtC,GACnCoC,KAAKxD,SAAL,2BACKuD,GADL,IAEEnC,SACAC,SACAE,iB,mDAGFiC,KAAKxD,SAAS,CACZ6B,OAAO,EACPwB,SAAS,I,+IA8NL,IAAD,EAYFG,KAAK5B,MAVRyB,EAFK,EAELA,QACAxB,EAHK,EAGLA,MACAjC,EAJK,EAILA,KACAC,EALK,EAKLA,QACAK,EANK,EAMLA,QACAC,EAPK,EAOLA,WACAiB,EARK,EAQLA,OACAC,EATK,EASLA,OACAC,EAVK,EAULA,SACAC,EAXK,EAWLA,YAGF,GAAI8B,EACF,OAAO,qBAAKnF,GAAG,WAAR,SAAmB,mBAAUyF,QAAM,MAG5C,GAAI9B,IAAqB,IAAZR,EACX,OAAO,cAAC1C,EAAD,CAAO0C,OAAQA,EAAQM,OAAQ6B,KAAK7B,SAG7C,IAAK/B,IAASC,EACZ,OAAO,cAACpB,EAAD,CAAOkB,MAAO6D,KAAK7D,QAG5B,IAAIiE,EAAW,GACXC,EAAiB,KACfC,EAAazC,EAEnB,GAAKC,EAASa,KAAQb,EAASc,KAGxB,GAAKd,EAASmC,KAInB,OAAOK,GACL,KAAK,EACHF,EAAQ,wCAAWxC,EAAOwB,OAAS,EAA3B,sBACRiB,EAAiB,cAAC7E,EAAD,CAAaoC,OAAQA,EAAQvB,QAASA,EAASoC,YAAauB,KAAKvB,cAClF,MAEF,KAAK,EACH2B,EAAQ,wCAAWxC,EAAOwB,OAAlB,sBACRiB,EAAiB,cAAC9E,EAAD,CAAWqC,OAAQA,EAAQoB,YAAagB,KAAKhB,YAAaF,WAAYkB,KAAKlB,aAC5F,MAEF,KAAK,EACHsB,EAAQ,kCAAUxC,EAAOwB,OAAjB,sBACRiB,EAAiB,cAAC3E,EAAD,CAAeW,QAASA,EAASoD,iBAAkBO,KAAKP,mBACzE,MAEF,KAAK,EACHW,EAAQ,6CACRC,EAAiB,cAACjF,EAAD,CAAQ2C,YAAaA,EAAa2B,eAAgBM,KAAKN,sBArB5EU,EAAW,2BACXC,EAAiB,cAAC5E,EAAD,CAAcmE,mBAAoBI,KAAKJ,0BAJxDQ,EAAW,2BACXC,EAAiB,cAAC/E,EAAD,CAAUsE,mBAAoBI,KAAKJ,qBA+BtD,OACE,sBAAKlF,GAAG,OAAR,UACE,mBACE6F,UAAU,EACVvD,MAAM,mDACNoD,SAAUA,EACVI,MAAO,CACL,mBAAqBC,KAAK,OAAOC,QAASV,KAAK9B,WAA/C,qCAAY,UACZ,mBAAuByC,QAAM,EAACF,KAAK,UAAUC,QAASV,KAAKpD,cAA3D,iDAAY,YACZ,mBAAqB+D,QAAM,EAACD,QAASV,KAAKhC,eAA1C,iDAAY,WAPhB,SAUE,qBAAK4C,UAAU,UAAf,SACE,oBAAchG,KAAK,QAAQiG,OAAQ,EAAnC,UACE,kBAAcC,KAAd,CAAmBC,MAAM,2BAAzB,SACG3E,IAEH,uBACA,kBAAc0E,KAAd,CAAmBC,MAAM,2BAAzB,SACG1E,WAKRgE,EACD,cAAChF,EAAD,CACEqB,QAASA,EACTsE,QAASrE,EACTsE,SAAUjB,KAAKvD,oB,GAtXQyE,iBAkYjC,SAAShB,EAAoBtC,GAC3B,IACMuB,EAAavB,EAAOA,EAAOwB,OAAS,GAFP,EAO/BD,GAAc,GAPiB,IAIjCR,WAJiC,MAI3B,GAJ2B,MAKjCC,YALiC,MAK1B,GAL0B,MAMjCC,YANiC,MAM1B,GAN0B,EA8BnC,OAtBKM,EAGHR,EAAIS,QAAU,IACdR,EAAKQ,QAAU,GAEXP,EAAKO,OAAS,EACP,EACAxB,EAAOwB,QAAU,EACjB,EAEA,EAGXT,EAAIS,OAAS,IACbT,EAAIS,SAAWR,EAAKQ,QACJ,IAAhBP,EAAKO,OAEI,GAEC,EAnBD,EAwBN,SAAS+B,EAAKC,GAAyC,IAAlCC,EAAiC,uDAArB,IAAMC,EAAe,wDACnD5C,EAAqB0C,EAArB1C,MAAOC,EAAcyC,EAAdzC,IAAKC,EAASwC,EAATxC,KACpB,IACGF,IACG6C,MAAMC,QAAQ7C,KACd4C,MAAMC,QAAQ5C,IACd0C,IAAU3C,EAAIS,OAAS,IAAMR,EAAKQ,OAAS,IAE/C,MAAO,GAOT,IALA,IAAIqC,EAAO,EACPC,EAAQ,EACRxC,EAAS,EACTyC,EAAS,EACTC,EAAW,EACNC,EAAI,EAAGA,EAAIlD,EAAIS,OAAQyC,GAAK,EACnCJ,GAAQ9C,EAAIkD,GAAKC,EAAKpD,GAAOmD,EAAI,GAC7BjD,EAAKiD,KAAOD,GAAyB,IAAbA,GAC1BF,EAAQ,EACRxC,EAAS,IAETwC,GAAS/C,EAAIkD,GAAKC,EAAKpD,GAAOmD,EAAI,GAClC3C,GAAUP,EAAIkD,IAEhBD,GAAYjD,EAAIkD,GAAKjD,EAAKiD,GAC1BF,GAAU/C,EAAKiD,GAAKC,EAAKpD,GAAOmD,EAAI,GAEtC,IAAME,EAAUV,EAAYM,EAASF,EAC/BO,EAAc9C,GAAU,EAAI,EAAKwC,EAAQxC,EACzC+C,EAAcL,EAAWE,EAAKpD,GAAOC,EAAIS,OAAS,GAClD8C,EAAaH,EAAUE,EACvBlE,EAAcmE,EAAab,EAC3Bc,EAASC,KAAKC,MAAMN,EAAUD,EAAKpD,GAAOC,EAAIS,OAAS,IAC7D,MAAO,CACL4C,cACAJ,WACA7D,cACAgE,UACAE,cACAC,aACAC,UAIJ,SAASpD,EAAWnB,GAElB,IADA,IAAIG,EAAc,EACT8D,EAAI,EAAGA,EAAIjE,EAAOwB,OAAQyC,GAAK,EAAG,CAAC,IAAD,EACLV,EAAKvD,EAAOiE,GAAI,KAAM,GAAlD9D,YACRA,QAFyC,MACX,EADW,EAI3C,OAAQA,EAAYuE,QAAQ,GAG9B,SAAS3C,EAAc4C,EAASnG,EAAMC,GAEpC,IADA,IAAMuB,EAAS,GACNiE,EAAI,EAAGA,EAAIU,EAAQnD,OAAQyC,GAAK,EAAG,CAiB1C,IAhBA,IAAMW,EAAS,GAD2B,EAEPD,EAAQV,GAAnClD,EAFkC,EAElCA,IAAKC,EAF6B,EAE7BA,KAAMC,EAFuB,EAEvBA,KAAMH,EAFiB,EAEjBA,MACnB0C,EAAQ,CACZxC,KAAM,GACND,IAAK,GACLD,SAEE+D,OAAU,EACVC,EAAY,EACZC,EAAgB,EAChBC,EAAgB,EAChBC,EAAY,EACZC,EAAY,EACZC,EAAoB,EACpBC,EAAoB,EAClBC,EAA0B,GACvBC,EAAI,EAAGA,EAAIvE,EAAIS,OAAQ8D,GAAK,EAAG,CACtC9B,EAAMxC,KAAKuE,KAAKvE,EAAKsE,IACrB9B,EAAMzC,IAAIwE,KAAKxE,EAAIuE,IAFmB,MAQlC/B,EAAKC,GAJPY,EAJoC,EAIpCA,YACAJ,EALoC,EAKpCA,SACA7D,EANoC,EAMpCA,YACAkE,EAPoC,EAOpCA,YAEEmB,EAAY,EACZC,EAAY,EACZC,EAAe,EACfC,EAAe,EACbC,GAAiB1B,EAAKpD,GAAOwE,EAAI,GAAKlB,GAAeJ,EACrD6B,GAAkB3B,EAAKpD,GAAOwE,EAAI,GAAKlB,GAAepD,EAAKsE,GAC7DpB,EAAKpD,GAAOwE,EAAI,GAAKlB,GACtBoB,EAA4BI,EAAjBF,EAAgCG,GACnC3B,EAAKpD,GAAOwE,EAAI,GAAKlB,IAC7BqB,EAA4BG,EAAjBD,EAAgCE,GAE9CZ,GAAcO,EAAYE,EAC1BR,GAAcO,EAAYE,EAC1BR,GAAqBO,EACrBN,GAAqBO,EACrB,IAAMG,EAAQ,CACZ,IAAO/E,EAAIuE,GACX,KAAQtE,EAAKsE,GACb,sBAAuBpB,EAAKpD,GAAOwE,EAAI,GACvC,kCAAmClB,EACnC,SAAYJ,EACZ,iBAAkB4B,EAClB,eAAgBzF,EAChB,eAAgBkE,EAChB,aAAcmB,EACd,aAAcC,EACd,gBAAiBC,EACjB,gBAAiBC,GAEnB,GAAI3E,EAAKsE,GAAK,EAAG,CACf,IAAMS,EAAO7B,EAAKpD,GAAOwE,EAAI,GAAKlB,EAClCiB,EAAwBE,KAAKQ,GAC7BD,EAAM,uBAAyBC,EAC3BT,EAAI,IACFtE,EAAKsE,GAAKtE,EAAKsE,EAAI,GACrBP,GAAiB/D,EAAKsE,GACbtE,EAAKsE,GAAKtE,EAAKsE,EAAI,KAC5BN,GAAiBhE,EAAKsE,KAI5BV,EAAOW,KAAKO,QACOE,IAAfnB,IACFC,GAAa9D,EAAKsE,KACD,MACfT,EAAaS,GAInB,IAAMW,EAA0B,IAAdhB,EAAkB,EAAIE,EAAoBF,EACtDiB,EAA0B,IAAdhB,EAAkB,EAAIE,EAAoBF,EAC5DlF,EAAOuF,KAAK,CACV,yBAA0BF,EAAwBc,QAAO,SAACtG,EAAGuG,GAAJ,OAAUvG,EAAIuG,IAAG,GAAKf,EAAwB7D,OACvG,OAAUuD,EAAgBC,IAAkBD,EAAgBC,GAC5D,eAAgBJ,EAAOA,EAAOpD,OAAS,GAAG,gBAC1C,8BAA+BqD,EAC/B,kBAAmBE,EACnB,kBAAmBC,EACnB,OAAUJ,EACV,GAAMqB,EAAYC,EAClB,MAASpF,EACT,KAAQG,IAGZ,MAAO,CACL,UAAWzC,EACX,OAAUwB,EACV,WAAYvB,EACZ,eAAgBuB,EAAOmG,QAAO,SAACzC,EAAOF,GAAR,OAAkBE,EAAQF,EAAM,kBAAiB,IAInF,SAAS1B,EAAeuE,EAAW7H,EAAMC,GACvC,IAAM6H,EAAWC,KAAKC,UAAUH,GAC1BI,EAAiB,IAAIC,KAAK,CAACJ,GAAW,CAACzD,KAAM,eAC7C8D,EAAexJ,SAASyJ,cAAc,KAC5CD,EAAaE,SAAb,4BAA6CrI,EAA7C,YAAqDC,EAArD,SACAkI,EAAaG,UAAY,gBACA,OAArBpG,OAAOqG,UAGTJ,EAAaK,KAAOtG,OAAOqG,UAAUE,gBAAgBR,IAIrDE,EAAaK,KAAOtG,OAAOwG,IAAID,gBAAgBR,GAC/CE,EAAaQ,QAAU,SAAC3H,GACtBrC,SAASiK,KAAKC,YAAY7H,EAAME,SAElCiH,EAAaW,MAAMC,QAAU,OAC7BpK,SAASiK,KAAKI,YAAYb,IAE5BA,EAAac,W","file":"static/js/main.ab4f7228.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Spin } from 'antd';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div id=\"app\">\n      <Suspense fallback={<Spin size=\"large\" delay={100} />}>\n        <App />\n      </Suspense>\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { lazy, PureComponent } from 'react';\nimport localForage from 'localforage';\nimport {\n  Button,\n  Descriptions,\n  Input,\n  message,\n  Modal,\n  PageHeader,\n  Skeleton,\n} from 'antd';\n\nimport data from './data.json';\n\nconst Login = lazy(() => import('./Login'));\nconst Error = lazy(() => import('./Error'));\nconst Finish = lazy(() => import('./Finish'));\nconst Notice = lazy(() => import('./Notice'));\nconst Practice = lazy(() => import('./Practice'));\nconst Dashboard = lazy(() => import('./Dashboard'));\nconst Preparation = lazy(() => import('./Preparation'));\nconst PracticeTest = lazy(() => import('./PracticeTest'));\nconst Questionnaire = lazy(() => import('./Questionnaire'));\n\nexport const STOCK = {\n  A: '甲',\n  B: '乙',\n  C: '丙',\n  D: '丁',\n  E: '戊',\n  Practice: '练习环节',\n};\nconst CLEAR_PASSWORD = '981107';\n\nexport default class App extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      uuid: '',\n      groupID: '',\n      noticed: false,\n      showNotice: false,\n      practice: {\n        // buy: [],\n        // sell: [],\n        // test: [],\n      },\n      trades: [],\n      /**\n       * [{\n       *  stock: A | B | C | D | E,\n       *  buy: [],  // length = 20\n       *  sell: [], // length = 20\n       *  mood: [], // length = 4\n       * }]\n       */\n      status: 0,\n      error: false,\n      totalProfit: 0,\n    };\n    this.clearPassword = '';\n  }\n\n  async componentDidMount() {\n    try {\n      const { uuid = '', groupID = '' } = await localForage.getItem('userInfo') ?? {};\n      const noticed = await localForage.getItem('noticed') ?? false;\n      const nextState = {\n        uuid,\n        groupID,\n        noticed,\n        showNotice: !noticed,\n        loading: false,\n      };\n      if (!uuid || !groupID) {\n        return this.setState(nextState);\n      }\n      const practice = await localForage.getItem('practice') ?? {};\n      nextState.practice = practice;\n      if (!practice.buy || !practice.sell || !practice.test) {\n        return this.setState(nextState);\n      }\n      const trades = await localForage.getItem('trades') ?? [];\n      const totalProfit = calcProfit(trades);\n      const status = getExperimentStatus(trades);\n      this.setState({\n        ...nextState,\n        trades,\n        status,\n        totalProfit,\n      });\n    } catch (err) {\n      this.setState({\n        error: true,\n        loading: false,\n      });\n    }\n  }\n\n  login = ({ uuid, groupID }) => {\n    localForage.setItem('userInfo', {\n      uuid,\n      groupID,\n    }, () => {\n      this.setState({\n        uuid,\n        groupID,\n      });\n    });\n  }\n\n  closeModal = () => {\n    localForage.setItem('noticed', true, () => {\n      this.setState({\n        noticed: true,\n        showNotice: false,\n      });\n    });\n  }\n\n  clearUserInfo = () => {\n    Modal.confirm({\n      okText: '确定',\n      cancelText: '取消',\n      title: '是否清除用户数据？',\n      content: [\n        <p key=\"text\">清除用户数据后也将会清除实验数据！请谨慎操作！</p>,\n        <p key=\"password\">请主试输入密码：<Input.Password onChange={(event) => {this.clearPassword = event.target.value}} /></p>,\n      ],\n      onOk: async () => {\n        if (this.clearPassword !== CLEAR_PASSWORD) {\n          message.warning('主试权限才能清除用户数据！');\n          return;\n        }\n        this.clearPassword = '';\n\n        await localForage.clear();\n        this.setState({\n          uuid: '',\n          groupID: '',\n          noticed: false,\n          showNotice: true,\n          trades: [],\n          status: 0,\n          practice: {},\n          totalProfit: 0,\n        });\n      },\n    });\n  }\n\n  clearDashboard = () => {\n    Modal.confirm({\n      okText: '确定',\n      cancelText: '取消',\n      title: '是否清除实验数据',\n      content: [\n        <p key=\"text\">清除实验数据后，您需要重新操作！请谨慎操作！</p>,\n        <p key=\"password\">请主试输入密码：<Input.Password onChange={(event) => {this.clearPassword = event.target.value}} /></p>,\n      ],\n      onOk: async () => {\n        if (this.clearPassword !== CLEAR_PASSWORD) {\n          message.warning('主试权限才能清除实验数据！');\n          return;\n        }\n        this.clearPassword = '';\n\n        await localForage.removeItem('trades');\n        this.setState({\n          trades: [],\n          status: 0,\n          totalProfit: 0,\n        });\n      },\n    });\n  }\n\n  openNotice = () => {\n    this.setState({ showNotice: true });\n  }\n\n  goBack = async () => {\n    const { status } = this.state;\n    if (status === -1) {\n      await localForage.removeItem('trades');\n      this.setState({\n        error: false,\n        trades: [],\n        status: 0,\n      });\n    } else {\n      window.location.reload();\n    }\n  }\n\n  handleStart = (stock) => {\n    this.setState((state) => ({\n      trades: [...state.trades, {\n        stock,\n        buy: [300],\n        sell: [0],\n        mood: [],\n      }],\n      status: 1,\n    }), () => {\n      const { trades } = this.state;\n      localForage.setItem('trades', trades);\n    });\n  }\n\n  handleNext = () => {\n    const { trades } = this.state;\n    const totalProfit = calcProfit(trades);\n    this.setState({\n      status: 2,\n      totalProfit,\n    });\n  }\n\n  handleTrade = (option, amount) => {\n    const { trades } = this.state;\n    const latestData = trades[trades.length - 1];\n    if (latestData) {\n      const { buy, sell, mood } = latestData;\n      if (buy.length !== sell.length) {\n        return this.setState({ status: -1 });\n      }\n      if (buy.length >= 20) {\n        if (mood.length < 4) {\n          this.setState({ status: 2 });\n        } else {\n          this.setState({ status: 3 });\n        }\n      } else {\n        const updateKeys = {};\n        if (option === 'buy') {\n          updateKeys.buy = [...buy, amount];\n          updateKeys.sell = [...sell, 0];\n        } else if (option === 'sell') {\n          updateKeys.buy = [...buy, 0];\n          updateKeys.sell = [...sell, amount];\n        } else {\n          updateKeys.buy = [...buy, 0];\n          updateKeys.sell = [...sell, 0];\n        }\n        const newTrades = trades.slice();\n        newTrades.splice(-1, 1, {\n          ...latestData,\n          ...updateKeys,\n        });\n        this.setState({\n          trades: newTrades,\n        }, () => {\n          localForage.setItem('trades', newTrades);\n        });\n      }\n    } else {\n      this.setState({ status: 0 });\n    }\n  }\n\n  onQuestionSubmit = (mood) => {\n    const { trades } = this.state;\n    const latestData = trades[trades.length - 1];\n    if (!latestData) {\n      return this.setState({\n        status: -1,\n      });\n    }\n    const newTrades = trades.slice();\n    newTrades.splice(-1, 1, {\n      ...latestData,\n      mood,\n    });\n    this.setState({\n      trades: newTrades,\n      status: newTrades.length >= 5 ? 3 : 0,\n    }, () => {\n      localForage.setItem('trades', newTrades);\n    });\n  }\n\n  saveTextAsFile = () => {\n    Modal.confirm({\n      okText: '确定',\n      cancelText: '取消',\n      title: '导出实验数据',\n      content: [\n        <p key=\"text\">为避免实验数据丢失，请在导出实验数据后发送到主试邮箱！</p>,\n        <p key=\"password\">请主试输入密码：<Input.Password onChange={(event) => {this.clearPassword = event.target.value}} /></p>,\n      ],\n      onOk: async () => {\n        if (this.clearPassword !== CLEAR_PASSWORD) {\n          message.warning('主试权限才能导出实验数据！');\n          return;\n        }\n        this.clearPassword = '';\n\n        const { uuid, groupID, trades } = this.state;\n        saveTextAsFile(calcFinalData(trades, uuid, groupID), uuid, groupID);\n      },\n    });\n  }\n\n  handlePracticeNext = (practice) => {\n    this.setState((state) => ({\n      practice: {\n        ...state.practice,\n        ...practice,\n      },\n    }), () => {\n      const { practice } = this.state;\n      localForage.setItem('practice', practice);\n    });\n  }\n\n  render() {\n    const {\n      loading,\n      error,\n      uuid,\n      groupID,\n      noticed,\n      showNotice,\n      trades,\n      status,\n      practice,\n      totalProfit,\n     } = this.state;\n\n    if (loading) {\n      return <div id=\"skeleton\"><Skeleton active /></div>;\n    }\n\n    if (error || status === -1) {\n      return <Error status={status} goBack={this.goBack} />;\n    }\n\n    if (!uuid || !groupID) {\n      return <Login login={this.login} />;\n    }\n\n    let subTitle = '';\n    let childComponent = null;\n    const tempStatus = status;\n\n    if (!practice.buy || !practice.sell) {\n      subTitle = \"练习操作\";\n      childComponent = <Practice handlePracticeNext={this.handlePracticeNext} />;\n    } else if (!practice.test) {\n      subTitle = \"练习测验\";\n      childComponent = <PracticeTest handlePracticeNext={this.handlePracticeNext} />;\n    } else {\n      switch(tempStatus) {\n        case 0: {\n          subTitle = `即将开始第${trades.length + 1}轮实验`;\n          childComponent = <Preparation trades={trades} groupID={groupID} handleStart={this.handleStart} />;\n          break;\n        }\n        case 1: {\n          subTitle = `正在进行第${trades.length}轮实验`;\n          childComponent = <Dashboard trades={trades} handleTrade={this.handleTrade} handleNext={this.handleNext} />;\n          break;\n        }\n        case 2: {\n          subTitle = `已结束第${trades.length}轮实验`;\n          childComponent = <Questionnaire groupID={groupID} onQuestionSubmit={this.onQuestionSubmit} />;\n          break;\n        }\n        case 3: {\n          subTitle = `所有实验已结束`;\n          childComponent = <Finish totalProfit={totalProfit} saveTextAsFile={this.saveTextAsFile} />;\n          break;\n        }\n        default:\n          break;\n      }\n    }\n\n    return (\n      <div id=\"main\">\n        <PageHeader\n          backIcon={false}\n          title=\"股票模拟交易实验\"\n          subTitle={subTitle}\n          extra={[\n            <Button key=\"notice\" type=\"link\" onClick={this.openNotice}>实验须知</Button>,\n            <Button key=\"userInfo\" danger type=\"primary\" onClick={this.clearUserInfo}>清除用户数据</Button>,\n            <Button key=\"trades\" danger onClick={this.clearDashboard}>清除实验数据</Button>,\n          ]}\n        >\n          <div className=\"content\">\n            <Descriptions size=\"small\" column={2}>\n              <Descriptions.Item label=\"被试编号\">\n                {uuid}\n              </Descriptions.Item>\n              <br />\n              <Descriptions.Item label=\"分组编号\">\n                {groupID}\n              </Descriptions.Item>\n            </Descriptions>\n          </div>\n        </PageHeader>\n        {childComponent}\n        <Notice\n          noticed={noticed}\n          visible={showNotice}\n          onCancel={this.closeModal}\n        />\n      </div>\n    );\n  }\n}\n\n/**\n * 传入实验数据返回当前实验状态\n * @param {Array} trades 实验数据\n * @returns {(-1|0|1|2|3)} 实验状态\n */\nfunction getExperimentStatus(trades) {\n  let status;\n  const latestData = trades[trades.length - 1];\n  const {\n    buy = [],\n    sell = [],\n    mood = [],\n  } = latestData || {};\n  if (!latestData) {\n    status = 0;\n  } else if (\n    buy.length >= 20 ||\n    sell.length >= 20\n  ) {\n    if (mood.length < 4) {\n      status = 2;\n    } else if (trades.length >= 5) {\n      status = 3;\n    } else {\n      status = 0;\n    }\n  } else if (\n    buy.length < 20 &&\n    buy.length === sell.length &&\n    mood.length === 0\n  ) {\n    status = 1;\n  } else {\n    status = -1;\n  }\n  return status;\n}\n\nexport function calc(trade, principal = 5000, total = false) {\n  const { stock, buy, sell } = trade;\n  if (\n    !stock\n    || !Array.isArray(buy)\n    || !Array.isArray(sell)\n    || (total && (buy.length < 20 || sell.length < 20))\n  ) {\n    return {};\n  }\n  let cost = 0;\n  let tCost = 0;\n  let amount = 0;\n  let profit = 0;\n  let position = 0;\n  for (let i = 0; i < buy.length; i += 1) {\n    cost += buy[i] * data[stock][i + 3];\n    if (sell[i] === position && position !== 0) {\n      tCost = 0;\n      amount = 0;\n    } else {\n      tCost += buy[i] * data[stock][i + 3];\n      amount += buy[i];\n    }\n    position += buy[i] - sell[i];\n    profit += sell[i] * data[stock][i + 3];\n  }\n  const balance = principal + profit - cost;\n  const averageCost = amount <= 0 ? 0 : (tCost / amount);\n  const marketValue = position * data[stock][buy.length + 3];\n  const totalAsset = balance + marketValue;\n  const totalProfit = totalAsset - principal;\n  const maxBuy = Math.floor(balance / data[stock][buy.length + 3])\n  return {\n    averageCost,\n    position,\n    totalProfit,\n    balance,\n    marketValue,\n    totalAsset,\n    maxBuy,\n  };\n}\n\nfunction calcProfit(trades) {\n  let totalProfit = 0;\n  for (let i = 0; i < trades.length; i += 1) {\n    const { totalProfit: profit = 0 } = calc(trades[i], 5000, true);\n    totalProfit += profit;\n  }\n  return +totalProfit.toFixed(2);\n}\n\nfunction calcFinalData(rawData, uuid, groupID) {\n  const trades = [];\n  for (let i = 0; i < rawData.length; i += 1) {\n    const trials = [];\n    const { buy, sell, mood, stock } = rawData[i];\n    const trade = {\n      sell: [],\n      buy: [],\n      stock,\n    };\n    let trialIndex;\n    let totalSell = 0;\n    let sellAfterRise = 0;\n    let sellAfterFall = 0;\n    let totalGain = 0;\n    let totalLose = 0;\n    let totalRealizedGain = 0;\n    let totalRealizedLose = 0;\n    const sellPriceSubAverageCost = [];\n    for (let j = 0; j < buy.length; j += 1) {\n      trade.sell.push(sell[j]);\n      trade.buy.push(buy[j]);\n      const {\n        averageCost,\n        position,\n        totalProfit,\n        marketValue,\n      } = calc(trade);\n      let paperGain = 0;\n      let paperLose = 0;\n      let realizedGain = 0;\n      let realizedLose = 0;\n      const currentProfit = (data[stock][j + 4] - averageCost) * position;\n      const realizedProfit = (data[stock][j + 4] - averageCost) * sell[j];\n      if (data[stock][j + 4] > averageCost) {\n        [paperGain, realizedGain] = [currentProfit, realizedProfit];\n      } else if (data[stock][j + 4] < averageCost) {\n        [paperLose, realizedLose] = [currentProfit, realizedProfit];\n      }\n      totalGain += (paperGain + realizedGain);\n      totalLose += (paperLose + realizedLose);\n      totalRealizedGain += realizedGain;\n      totalRealizedLose += realizedLose;\n      const trial = {\n        'Buy': buy[j],  // 每个 trial 买入的股票数量\n        'Sell': sell[j],  // 每个 trial 卖出的股票数量\n        'Current Stock Price': data[stock][j + 4],  // 当前股价\n        'Weighted Average Purchase Price': averageCost, // 加权平均买入价\n        'Position': position, // 持仓\n        'Current Profit': currentProfit,  // 当前盈亏\n        'Total Profit': totalProfit,  // 总盈亏\n        'Market Value': marketValue,  // 股票总市值\n        'Paper Gain': paperGain,  //  纸面盈利\n        'Paper Lose': paperLose,  // 纸面亏损\n        'Realized Gain': realizedGain,  // 兑现盈利\n        'Realized Lose': realizedLose,  // 兑现亏损\n      };\n      if (sell[j] > 0) {\n        const diff = data[stock][j + 4] - averageCost;\n        sellPriceSubAverageCost.push(diff);\n        trial['The Diff Of SP-WAPP'] = diff;  // 卖出价与加权平均买入价的差值\n        if (j > 0) {\n          if (sell[j] > sell[j - 1]) {\n            sellAfterRise += sell[j];\n          } else if (sell[j] < sell[j - 1]) {\n            sellAfterFall += sell[j];\n          }\n        }\n      }\n      trials.push(trial);\n      if (trialIndex === undefined) {\n        totalSell += sell[j];\n        if (totalSell >= 300) {\n          trialIndex = j;\n        }\n      }\n    }\n    const gainRatio = totalGain === 0 ? 0 : totalRealizedGain / totalGain;\n    const lossRatio = totalLose === 0 ? 0 : totalRealizedLose / totalLose;\n    trades.push({\n      'The Average Of SP-WAPP': sellPriceSubAverageCost.reduce((a, b) => a + b, 0) / sellPriceSubAverageCost.length,  // 每轮实验卖出价与加权平均买入价的差值的平均值\n      'Alpha': (sellAfterRise - sellAfterFall) / (sellAfterRise + sellAfterFall), // α = (s+ - s-) / (s+ + s-)\n      'Total Profit': trials[trials.length - 1]['Total Profit'],  // 每轮实验的最终累计盈亏\n      'Trial While Sold 300 Shares': trialIndex,  // 在第几个 trial 累计卖出 300 股\n      'Sell After Rise': sellAfterRise, // 股票上涨后卖出股票数量\n      'Sell After Fall': sellAfterFall, // 股票下跌后卖出股票数量\n      'Trials': trials, // 每个 trial 的交易数据数组\n      'DE': gainRatio - lossRatio,  // DE\n      'Stock': stock,  // 股票类型\n      'Mood': mood, // 情绪调查\n    });\n  }\n  return {\n    'User ID': uuid, // 用户 ID\n    'Trades': trades, // 交易数据\n    'Group ID': groupID,  // 用户选择分组\n    'Total Profit': trades.reduce((total, trade) => total + trade['Total Profit'], 0),  // 五轮实验的总盈亏\n  };\n}\n\nfunction saveTextAsFile(finalData, uuid, groupID) {\n  const fileText = JSON.stringify(finalData);\n  const fileTextAsBlob = new Blob([fileText], {type: 'text/plain'});\n  const downloadLink = document.createElement('a');\n  downloadLink.download = `stocks-simulation-${uuid}-${groupID}.json`;\n  downloadLink.innerHTML = 'Download File';\n  if (window.webkitURL !== null) {\n    // Chrome allows the link to be clicked\n    // without actually adding it to the DOM.\n    downloadLink.href = window.webkitURL.createObjectURL(fileTextAsBlob);\n  } else {\n    // Firefox requires the link to be added to the DOM\n    // before it can be clicked.\n    downloadLink.href = window.URL.createObjectURL(fileTextAsBlob);\n    downloadLink.onclick = (event) => {\n      document.body.removeChild(event.target);\n    };\n    downloadLink.style.display = 'none';\n    document.body.appendChild(downloadLink);\n  }\n  downloadLink.click();\n}\n"],"sourceRoot":""}