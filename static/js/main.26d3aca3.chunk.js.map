{"version":3,"sources":["reportWebVitals.js","index.js","App.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","id","fallback","size","delay","App","document","getElementById","Login","lazy","Error","Finish","Notice","Dashboard","Preparation","Questionnaire","STOCK","A","B","C","D","E","props","login","uuid","groupID","localForage","setItem","setState","closeModal","noticed","showNotice","clearUserInfo","confirm","okText","cancelText","title","content","onOk","a","clear","trades","status","clearDashboard","removeItem","openNotice","goBack","state","error","window","location","reload","handleStart","stock","buy","sell","mood","handleTrade","option","amount","latestData","length","updateKeys","newTrades","slice","splice","onSubmit","data","console","log","loading","getItem","nextState","this","getExperimentStatus","active","subTitle","childComponent","backIcon","extra","type","onClick","danger","className","column","Item","label","value","suffix","visible","onCancel","PureComponent"],"mappings":"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","file":"static/js/main.26d3aca3.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Spin } from 'antd';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div id=\"app\">\n      <Suspense fallback={<Spin size=\"large\" delay={100} />}>\n        <App />\n      </Suspense>\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { lazy, PureComponent } from 'react';\nimport localForage from 'localforage';\nimport {\n  Button,\n  Descriptions,\n  Modal,\n  PageHeader,\n  Skeleton,\n  Statistic,\n} from 'antd';\n\nconst Login = lazy(() => import('./Login'));\nconst Error = lazy(() => import('./Error'));\nconst Finish = lazy(() => import('./Finish'));\nconst Notice = lazy(() => import('./Notice'));\nconst Dashboard = lazy(() => import('./Dashboard'));\nconst Preparation = lazy(() => import('./Preparation'));\nconst Questionnaire = lazy(() => import('./Questionnaire'));\n\nexport const STOCK = {\n  A: '甲',\n  B: '乙',\n  C: '丙',\n  D: '丁',\n  E: '戊',\n};\n\nexport default class App extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      uuid: '',\n      groupID: '',\n      noticed: false,\n      showNotice: false,\n      trades: [],\n      /**\n       * [{\n       *  stock: A | B | C | D | E,\n       *  buy: [],  // length = 21\n       *  sell: [], // length = 21\n       *  mood: [], // length = 5\n       * }]\n       */\n      status: 0,\n      error: false,\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const { uuid = '', groupID = '' } = await localForage.getItem('userInfo') ?? {};\n      const noticed = await localForage.getItem('noticed') ?? false;\n      const nextState = {\n        uuid,\n        groupID,\n        noticed,\n        showNotice: !noticed,\n        loading: false,\n      };\n      if (!uuid || !groupID) {\n        return this.setState(nextState);\n      }\n      const trades = await localForage.getItem('trades') ?? [];\n      const status = getExperimentStatus(trades);\n      this.setState({\n        ...nextState,\n        trades,\n        status,\n      });\n    } catch (err) {\n      this.setState({\n        error: true,\n        loading: false,\n      });\n    }\n  }\n\n  login = ({ uuid, groupID }) => {\n    localForage.setItem('userInfo', {\n      uuid,\n      groupID,\n    }, () => {\n      this.setState({\n        uuid,\n        groupID,\n      });\n    });\n  }\n\n  closeModal = () => {\n    localForage.setItem('noticed', true, () => {\n      this.setState({\n        noticed: true,\n        showNotice: false,\n      });\n    });\n  }\n\n  clearUserInfo = () => {\n    Modal.confirm({\n      okText: '确定',\n      cancelText: '取消',\n      title: '是否清除用户数据？',\n      content: '清除用户数据后也将会清除实验数据！请谨慎操作！',\n      onOk: async () => {\n        await localForage.clear();\n        this.setState({\n          uuid: '',\n          groupID: '',\n          noticed: false,\n          showNotice: true,\n          trades: [],\n          status: 0,\n        });\n      },\n    });\n  }\n\n  clearDashboard = () => {\n    Modal.confirm({\n      okText: '确定',\n      cancelText: '取消',\n      title: '是否清除实验数据',\n      content: '清除实验数据后，您需要重新操作！请谨慎操作！',\n      onOk: async () => {\n        await localForage.removeItem('trades');\n        this.setState({\n          trades: [],\n          status: 0,\n        });\n      },\n    });\n  }\n\n  openNotice = () => {\n    this.setState({ showNotice: true });\n  }\n\n  goBack = async () => {\n    const { status } = this.state;\n    if (status === -1) {\n      await localForage.removeItem('trades');\n      this.setState({\n        error: false,\n        trades: [],\n        status: 0,\n      });\n    } else {\n      window.location.reload();\n    }\n  }\n\n  handleStart = (stock) => {\n    this.setState((state) => ({\n      trades: [...state.trades, {\n        stock,\n        buy: [300],\n        sell: [0],\n        mood: [],\n      }],\n      status: 1,\n    }), () => {\n      const { trades } = this.state;\n      localForage.setItem('trades', trades);\n    });\n  }\n\n  handleTrade = (option, amount) => {\n    const { trades } = this.state;\n    const latestData = trades[trades.length - 1];\n    if (latestData) {\n      const { buy, sell, mood } = latestData;\n      if (buy.length !== sell.length) {\n        return this.setState({ status: -1 });\n      }\n      if (buy.length >= 21) {\n        if (mood.length < 5) {\n          this.setState({ status: 2 });\n        } else {\n          this.setState({ status: 3 });\n        }\n      } else {\n        const updateKeys = {};\n        if (option === 'buy') {\n          updateKeys.buy = [...buy, amount];\n          updateKeys.sell = [...sell, 0];\n        } else if (option === 'sell') {\n          updateKeys.buy = [...buy, 0];\n          updateKeys.sell = [...sell, amount];\n        } else {\n          updateKeys.buy = [...buy, 0];\n          updateKeys.sell = [...sell, 0];\n        }\n        const newTrades = trades.slice();\n        newTrades.splice(-1, 1, {\n          ...latestData,\n          ...updateKeys,\n        });\n        this.setState({\n          trades: newTrades,\n        }, () => {\n          localForage.setItem('trades', newTrades);\n        });\n      }\n    } else {\n      this.setState({ status: 0 });\n    }\n  }\n\n  onSubmit = (data) => {\n    console.log(data);\n  }\n\n  render() {\n    const {\n      loading,\n      error,\n      uuid,\n      groupID,\n      noticed,\n      showNotice,\n      trades,\n      status,\n     } = this.state;\n\n    if (loading) {\n      return <div id=\"skeleton\"><Skeleton active /></div>;\n    }\n\n    if (error || status === -1) {\n      return <Error status={status} goBack={this.goBack} />;\n    }\n\n    if (!uuid || !groupID) {\n      return <Login login={this.login} />;\n    }\n\n    let subTitle = '';\n    let childComponent = null;\n    switch(status) {\n      case 0: {\n        subTitle = `即将开始第${trades.length + 1}轮实验`;\n        childComponent = <Preparation trades={trades} groupID={groupID} handleStart={this.handleStart} />;\n        break;\n      }\n      case 1: {\n        subTitle = `正在进行第${trades.length}轮实验`;\n        childComponent = <Dashboard trades={trades} />;\n        break;\n      }\n      case 2: {\n        subTitle = `已结束第${trades.length}轮实验`;\n        childComponent = <Questionnaire onSubmit={this.onSubmit} />;\n        break;\n      }\n      case 3: {\n        subTitle = `所有实验已结束`;\n        childComponent = <Finish />;\n        break;\n      }\n      default:\n        break;\n    }\n\n    return (\n      <div id=\"main\">\n        <PageHeader\n          backIcon={false}\n          title=\"股票模拟交易实验\"\n          subTitle={subTitle}\n          extra={[\n            <Button key=\"notice\" type=\"link\" onClick={this.openNotice}>实验须知</Button>,\n            <Button key=\"userInfo\" danger type=\"primary\" onClick={this.clearUserInfo}>清除用户数据</Button>,\n            <Button key=\"trades\" danger onClick={this.clearDashboard}>清除实验数据</Button>,\n          ]}\n        >\n          <div className=\"content\">\n            <div className=\"main\">\n              <Descriptions size=\"small\" column={2}>\n                <Descriptions.Item label=\"被试编号\">\n                  {uuid}\n                </Descriptions.Item>\n                <br />\n                <Descriptions.Item label=\"分组编号\">\n                  {groupID}\n                </Descriptions.Item>\n              </Descriptions>\n            </div>\n            <div>\n              <div className=\"extra\">\n                <Statistic title=\"总累计盈亏\" value=\"\" suffix=\"金币\" />\n                <Statistic title=\"总盈亏率\" value=\"\" suffix=\"%\" />\n              </div>\n            </div>\n          </div>\n        </PageHeader>\n        {childComponent}\n        <Notice\n          noticed={noticed}\n          visible={showNotice}\n          onCancel={this.closeModal}\n        />\n      </div>\n    );\n  }\n}\n\n/**\n * 传入实验数据返回当前实验状态\n * @param {Array} trades 实验数据\n * @returns {(-1|0|1|2|3)} 实验状态\n */\nfunction getExperimentStatus(trades) {\n  let status;\n  const latestData = trades[trades.length - 1];\n  const {\n    buy = [],\n    sell = [],\n    mood = [],\n  } = latestData || {};\n  if (\n    !latestData || (\n      buy.length >= 21 ||\n      sell.length >= 21\n    )\n  ) {\n    if (mood.length === 0 || mood.length >= 5) {\n      if (trades.length >= 5) {\n        status = 3;\n      } else {\n        status = 0;\n      }\n    } else {\n      status = 2;\n    }\n  } else if (\n    buy.length < 21 &&\n    buy.length === sell.length &&\n    mood.length === 0\n  ) {\n    status = 1;\n  } else {\n    status = -1;\n  }\n  return status;\n}\n\nexport function calc() {}\n"],"sourceRoot":""}