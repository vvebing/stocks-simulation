{"version":3,"sources":["Dashboard.js","Practice.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"names":["Dashboard","props","getOption","myChart","trades","latestData","length","buy","stock","option","grid","left","right","top","bottom","containLabel","title","text","STOCK","tooltip","trigger","axisPointer","type","lineStyle","width","xAxis","boundaryGap","data","Array","fill","map","_","index","yAxis","showMinLabel","showMaxLabel","min","value","parseInt","max","series","name","slice","markPoint","setOption","onBuyInputChange","setState","buyValue","onBuyBtnMax","state","maxBuy","onSellInputChange","sellValue","onSellBtnMax","position","onBuyBtnClick","warning","tradeConfirm","onSellBtnClick","onKeepBtnClick","amount","action","trials","handleTrade","over","confirm","centered","okText","cancelText","content","onOk","next","toggleNext","inputFormatter","principal","calc","averageCost","totalProfit","balance","marketValue","totalAsset","currentProfit","toFixed","lineRef","createRef","this","echarts","getInstanceByDom","current","undefined","init","prevProps","dispose","handleNext","id","bordered","column","Item","label","onClick","className","ref","justify","span","size","block","step","precision","formatter","onChange","danger","nextProps","prevState","PureComponent","Practice","handlePracticeNext","useState","sell","changeTrades","updateKeys","_slicedToArray","arr","i","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","_s","_i","done","push","err","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/12.41aff563.chunk.js","sourcesContent":["import React, { createRef, PureComponent } from 'react';\nimport echarts from 'echarts/lib/echarts';\nimport 'echarts/lib/chart/line';\nimport 'echarts/lib/component/title';\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/markPoint';\nimport { Button, Col, Descriptions, InputNumber, message, Modal, Row } from 'antd';\n\nimport data from './data.json';\nimport { calc, STOCK } from './App';\n\nexport default class Dashboard extends PureComponent {\n  constructor(props) {\n    super(props);\n    const { trades, principal = 5000, trials = 20 } = props;\n    const latestData = trades[trades.length - 1] || {};\n    const {\n      averageCost = 0,\n      position = 0,\n      totalProfit = 0,\n      balance = 0,\n      marketValue = 0,\n      totalAsset = 0,\n      maxBuy = 0,\n    } = calc(latestData, principal);\n    const currentProfit = (data[latestData.stock][latestData.buy.length + 3] - averageCost) * position;\n    this.state = {\n      over: latestData.buy && latestData.buy.length >= trials,\n      buyValue: 0,\n      sellValue: 0,\n      averageCost: averageCost.toFixed(4),    // 加权成本\n      position,       // 持仓\n      currentProfit: currentProfit.toFixed(4),  // 当前盈亏\n      totalProfit: totalProfit.toFixed(4),    // 总盈亏\n      balance: balance.toFixed(4),        // 现金余额\n      marketValue: marketValue.toFixed(4),    // 股票市值\n      totalAsset: totalAsset.toFixed(4),     // 总资产\n      maxBuy,\n      trades,\n      next: false,\n    };\n    this.lineRef = createRef();\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { trades, principal = 5000 } = nextProps;\n    if (prevState.trades !== trades) {\n      const latestData = trades[trades.length - 1];\n      const {\n        averageCost = 0,\n        position = 0,\n        totalProfit = 0,\n        balance = 0,\n        marketValue = 0,\n        totalAsset = 0,\n        maxBuy = 0,\n      } = calc(latestData, principal);\n      const currentProfit = (data[latestData.stock][latestData.buy.length + 3] - averageCost) * position;\n      return {\n        averageCost: averageCost.toFixed(4),\n        position,\n        currentProfit: currentProfit.toFixed(4),\n        totalProfit: totalProfit.toFixed(4),\n        balance: balance.toFixed(4),\n        marketValue: marketValue.toFixed(4),\n        totalAsset: totalAsset.toFixed(4),\n        maxBuy,\n        trades,\n      };\n    }\n    return null;\n  }\n\n  componentDidMount() {\n    const { over } = this.state;\n    if (over) return;\n\n    this.myChart = echarts.getInstanceByDom(this.lineRef.current);\n    if (this.myChart === undefined) {\n      this.myChart = echarts.init(this.lineRef.current);\n    }\n    this.getOption();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { trades } = this.props;\n    if (trades !== prevProps.trades) {\n      this.getOption();\n    }\n  }\n\n  componentWillUnmount() {\n    this.myChart && this.myChart.dispose();\n    this.myChart = null;\n  }\n\n  getOption = () => {\n    if (!this.myChart) return;\n    const { trades } = this.props;\n    const latestData = trades[trades.length - 1];\n    if (!latestData) return;\n    const { buy, stock } = latestData;\n\n    const option = {\n      grid: {\n        left: '0',\n        right: '10px',\n        top: '35px',\n        bottom: '0',\n        containLabel: true,\n      },\n      title: {\n        text: `${STOCK[stock]}股票走势`,\n      },\n      tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n          type: 'line',\n          lineStyle: {\n            width: 1.5,\n            type: 'dashed',\n          },\n        },\n      },\n      xAxis: {\n        boundaryGap: false,\n        data: Array(22).fill('').map((_, index) => `Point ${index}`),\n      },\n      yAxis: {\n        showMinLabel: false,\n        showMaxLabel: false,\n        min: (value) => parseInt(value.min - 1, 10),\n        max: (value) => parseInt(value.max + 2, 10),\n      },\n      series: [\n        {\n          name: '股票价格',\n          type: 'line',\n          data: data[stock].slice(3, buy.length + 4),\n          markPoint: {\n            data: [\n              { type: 'min', name: '最低值' },\n              { type: 'max', name: '最高值' },\n            ],\n          },\n        }\n      ],\n    };\n    this.myChart.setOption(option);\n  }\n\n  onBuyInputChange = (value) => {\n    this.setState({ buyValue: +value });\n  }\n\n  onBuyBtnMax = () => {\n    this.setState((state) => ({ buyValue: state.maxBuy }));\n  }\n\n  onSellInputChange = (value) => {\n    this.setState({ sellValue: +value });\n  }\n\n  onSellBtnMax = () => {\n    this.setState((state) => ({ sellValue: state.position }));\n  }\n\n  onBuyBtnClick = () => {\n    const { buyValue, maxBuy } = this.state;\n    if (!buyValue) return message.warning('买入数量需大于零！');\n    if (buyValue > maxBuy) {\n      this.setState({ buyValue: maxBuy });\n      return message.warning(`现金余额最多只能购买${maxBuy}股！`);\n    };\n    this.tradeConfirm('buy', buyValue, `买入${buyValue}股`);\n  }\n\n  onSellBtnClick = () => {\n    const { sellValue, position } = this.state;\n    if (!sellValue) return message.warning('卖出数量需大于零！');\n    if (sellValue > position) {\n      this.setState({ sellValue: position });\n      return message.warning(`当前持仓最多只能卖出${position}股！`);\n    }\n    this.tradeConfirm('sell', sellValue, `卖出${sellValue}股`);\n  }\n\n  onKeepBtnClick = () => {\n    this.tradeConfirm('', 0, '继续持有');\n  }\n\n  tradeConfirm = (option, amount, action) => {\n    const { trades, trials = 20, handleTrade } = this.props;\n    const latestData = trades[trades.length - 1];\n    if (latestData.buy.length >= trials) {\n      return this.setState({ over: true });\n    }\n    Modal.confirm({\n      centered: true,\n      okText: '确定',\n      cancelText: '取消',\n      title: `${action}${STOCK[latestData.stock]}股票`,\n      content: '是否确认该操作？',\n      onOk: () => {\n        this.setState({\n          buyValue: 0,\n          sellValue: 0,\n          next: true,\n        });\n        handleTrade(option, amount);\n      },\n    });\n  }\n\n  toggleNext = () => {\n    const { trades, trials = 20 } = this.props;\n    const latestData = trades[trades.length - 1];\n    this.setState({ next: false, over: latestData.buy.length >= trials });\n  }\n\n  inputFormatter = (value) => parseInt(value, 10) || 0;\n\n  render() {\n    const { trades, trials = 20, handleNext } = this.props;\n    const {\n      over,\n      next,\n      buyValue,\n      sellValue,\n      averageCost,\n      position,\n      currentProfit,\n      totalProfit,\n      balance,\n      marketValue,\n      totalAsset,\n    } = this.state;\n    const latestData = trades[trades.length - 1] ?? {};\n    const { stock, buy } = latestData;\n\n    return over ? (\n      <div id=\"dashboard\">\n        <h2>本轮交易任务结束。</h2>\n        <Descriptions bordered column={1}>\n          <Descriptions.Item label=\"成本\">{+averageCost}</Descriptions.Item>\n          <Descriptions.Item label=\"持仓\">{position}</Descriptions.Item>\n          <Descriptions.Item label=\"总盈亏\">{+totalProfit}</Descriptions.Item>\n          <Descriptions.Item label=\"现金余额\">{+balance}</Descriptions.Item>\n          <Descriptions.Item label=\"股票市值\">{+marketValue}</Descriptions.Item>\n          <Descriptions.Item label=\"总资产\">{+totalAsset}</Descriptions.Item>\n        </Descriptions>\n        <h2>{`您在本轮交易任务的累计盈亏为：${+totalProfit}金币。`}</h2>\n        <Button type=\"primary\" onClick={handleNext}>点击继续</Button>\n      </div>\n    ) : (\n      <div id=\"dashboard\">\n        <div className=\"chart\" ref={this.lineRef} />\n        <div className=\"data\">\n          <div className=\"describe\">\n            <Descriptions bordered column={1} title=\"资产配置\">\n              <Descriptions.Item label=\"当前股价\">{data[stock][buy.length + 3]}</Descriptions.Item>\n              <Descriptions.Item label=\"成本\">{+averageCost}</Descriptions.Item>\n              <Descriptions.Item label=\"持仓\">{position}</Descriptions.Item>\n              <Descriptions.Item label=\"当前盈亏\">{+currentProfit}</Descriptions.Item>\n              <Descriptions.Item label=\"总盈亏\">{+totalProfit}</Descriptions.Item>\n              <Descriptions.Item label=\"现金余额\">{+balance}</Descriptions.Item>\n              <Descriptions.Item label=\"股票市值\">{+marketValue}</Descriptions.Item>\n              <Descriptions.Item label=\"总资产\">{+totalAsset}</Descriptions.Item>\n            </Descriptions>\n          </div>\n          <div className=\"option\">\n            {\n              next ?\n              <>\n                <Row justify=\"center\">\n                  <Col className=\"input-label\">\n                    {\n                      latestData.buy.length >= trials ?\n                      '本轮交易任务结束，点击确认查看本轮交易信息。' :\n                      '本期交易结束，请点击确认进入下一个交易期！'\n                    }\n                  </Col>\n                </Row>\n                <Row justify=\"center\">\n                  <Col span={12}>\n                    <Button\n                      type=\"primary\"\n                      size=\"large\"\n                      block\n                      onClick={this.toggleNext}\n                    >确认</Button>\n                  </Col>\n                </Row>\n              </> :\n              <>\n                <Row justify=\"space-between\">\n                  <Col span={6} className=\"input-label\">买入股票数量</Col>\n                  <Col span={4}>\n                    <InputNumber\n                      min={0}\n                      step={1}\n                      precision={0}\n                      value={buyValue}\n                      formatter={this.inputFormatter}\n                      onChange={this.onBuyInputChange}\n                    />\n                  </Col>\n                  <Col span={5}>\n                    <Button\n                      type=\"link\"\n                      block\n                      onClick={this.onBuyBtnMax}\n                    >最大值</Button>\n                  </Col>\n                  <Col span={6}>\n                    <Button\n                      type=\"primary\"\n                      block\n                      onClick={this.onBuyBtnClick}\n                    >买入</Button>\n                  </Col>\n                </Row>\n                <Row justify=\"space-between\">\n                  <Col span={6} className=\"input-label\">卖出股票数量</Col>\n                  <Col span={4}>\n                    <InputNumber\n                      min={0}\n                      step={1}\n                      precision={0}\n                      value={sellValue}\n                      formatter={this.inputFormatter}\n                      onChange={this.onSellInputChange}\n                    />\n                  </Col>\n                  <Col span={5}>\n                    <Button\n                      type=\"link\"\n                      block\n                      onClick={this.onSellBtnMax}\n                    >最大值</Button>\n                  </Col>\n                  <Col span={6}>\n                    <Button\n                      type=\"primary\"\n                      danger\n                      block\n                      onClick={this.onSellBtnClick}\n                    >卖出</Button>\n                  </Col>\n                </Row>\n                <Row justify=\"end\">\n                  <Col span={6}>\n                    <Button\n                      block\n                      className=\"keep-btn\"\n                      onClick={this.onKeepBtnClick}\n                    >持仓不变</Button>\n                  </Col>\n                </Row>\n              </>\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { useState } from 'react';\n\nimport Dashboard from './Dashboard';\n\nfunction Practice({ handlePracticeNext }) {\n  const [trades, changeTrades] = useState({ stock: 'Practice', buy: [], sell: [] });\n  const handleTrade = (option, amount) => {\n    const { buy, sell } = trades;\n    if (buy.length >= 8) {\n      handlePracticeNext({ buy, sell });\n    }\n    const updateKeys = {};\n    if (option === 'buy') {\n      updateKeys.buy = [...buy, amount];\n      updateKeys.sell = [...sell, 0];\n    } else if (option === 'sell') {\n      updateKeys.buy = [...buy, 0];\n      updateKeys.sell = [...sell, amount];\n    } else {\n      updateKeys.buy = [...buy, 0];\n      updateKeys.sell = [...sell, 0];\n    }\n    changeTrades({\n      ...trades,\n      ...updateKeys,\n    });\n  };\n  const handleNext = () => {\n    const { buy, sell } = trades;\n    handlePracticeNext({ buy, sell });\n  };\n\n  return (\n    <div>\n      <h3>首先进入练习环节。该环节的收益不计入最终累计收益，仅为熟悉操作所用。请根据屏幕呈现的信息，独立作出交易决策。</h3>\n      <Dashboard\n        trials={8}\n        principal={1000}\n        trades={[trades]}\n        handleNext={handleNext}\n        handleTrade={handleTrade}\n      />\n    </div>\n  );\n}\n\nexport default Practice;\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}